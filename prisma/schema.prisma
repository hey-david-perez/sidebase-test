generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
}

model admin_permissions {
  id                                                       Int                            @id @default(autoincrement())
  action                                                   String?                        @db.VarChar(255)
  subject                                                  String?                        @db.VarChar(255)
  properties                                               Json?
  conditions                                               Json?
  created_at                                               DateTime?                      @db.Timestamp(6)
  updated_at                                               DateTime?                      @db.Timestamp(6)
  created_by_id                                            Int?
  updated_by_id                                            Int?
  action_parameters                                        Json?
  admin_users_admin_permissions_created_by_idToadmin_users admin_users?                   @relation("admin_permissions_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "admin_permissions_created_by_id_fk")
  admin_users_admin_permissions_updated_by_idToadmin_users admin_users?                   @relation("admin_permissions_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "admin_permissions_updated_by_id_fk")
  admin_permissions_role_links                             admin_permissions_role_links[]

  // @@index([created_by_id], map: "admin_permissions_created_by_id_fk")
  // @@index([updated_by_id], map: "admin_permissions_updated_by_id_fk")
}

model admin_permissions_role_links {
  id                Int                @id @default(autoincrement())
  permission_id     Int?
  role_id           Int?
  permission_order  Float?
  admin_permissions admin_permissions? @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "admin_permissions_role_links_fk")
  admin_roles       admin_roles?       @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "admin_permissions_role_links_inv_fk")

  // @@index([permission_id], map: "admin_permissions_role_links_fk")
  // @@index([role_id], map: "admin_permissions_role_links_inv_fk")
  // @@index([permission_order], map: "admin_permissions_role_links_order_inv_fk")
  @@unique([permission_id, role_id], map: "admin_permissions_role_links_unique")
}

model admin_roles {
  id                                                 Int                            @id @default(autoincrement())
  name                                               String?                        @db.VarChar(255)
  code                                               String?                        @db.VarChar(255)
  description                                        String?                        @db.VarChar(255)
  created_at                                         DateTime?                      @db.Timestamp(6)
  updated_at                                         DateTime?                      @db.Timestamp(6)
  created_by_id                                      Int?
  updated_by_id                                      Int?
  admin_permissions_role_links                       admin_permissions_role_links[]
  admin_users_admin_roles_created_by_idToadmin_users admin_users?                   @relation("admin_roles_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "admin_roles_created_by_id_fk")
  admin_users_admin_roles_updated_by_idToadmin_users admin_users?                   @relation("admin_roles_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "admin_roles_updated_by_id_fk")
  admin_users_roles_links                            admin_users_roles_links[]

  // @@index([created_by_id], map: "admin_roles_created_by_id_fk")
  // @@index([updated_by_id], map: "admin_roles_updated_by_id_fk")
}

model admin_users {
  id                                                                                             Int                                 @id @default(autoincrement())
  firstname                                                                                      String?                             @db.VarChar(255)
  lastname                                                                                       String?                             @db.VarChar(255)
  username                                                                                       String?                             @db.VarChar(255)
  email                                                                                          String?                             @db.VarChar(255)
  password                                                                                       String?                             @db.VarChar(255)
  reset_password_token                                                                           String?                             @db.VarChar(255)
  registration_token                                                                             String?                             @db.VarChar(255)
  is_active                                                                                      Boolean?
  blocked                                                                                        Boolean?
  prefered_language                                                                              String?                             @db.VarChar(255)
  created_at                                                                                     DateTime?                           @db.Timestamp(6)
  updated_at                                                                                     DateTime?                           @db.Timestamp(6)
  created_by_id                                                                                  Int?
  updated_by_id                                                                                  Int?
  admin_permissions_admin_permissions_created_by_idToadmin_users                                 admin_permissions[]                 @relation("admin_permissions_created_by_idToadmin_users")
  admin_permissions_admin_permissions_updated_by_idToadmin_users                                 admin_permissions[]                 @relation("admin_permissions_updated_by_idToadmin_users")
  admin_roles_admin_roles_created_by_idToadmin_users                                             admin_roles[]                       @relation("admin_roles_created_by_idToadmin_users")
  admin_roles_admin_roles_updated_by_idToadmin_users                                             admin_roles[]                       @relation("admin_roles_updated_by_idToadmin_users")
  admin_users_admin_users_created_by_idToadmin_users                                             admin_users?                        @relation("admin_users_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "admin_users_created_by_id_fk")
  other_admin_users_admin_users_created_by_idToadmin_users                                       admin_users[]                       @relation("admin_users_created_by_idToadmin_users")
  admin_users_admin_users_updated_by_idToadmin_users                                             admin_users?                        @relation("admin_users_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "admin_users_updated_by_id_fk")
  other_admin_users_admin_users_updated_by_idToadmin_users                                       admin_users[]                       @relation("admin_users_updated_by_idToadmin_users")
  admin_users_roles_links                                                                        admin_users_roles_links[]
  backfill_dags_backfill_dags_created_by_idToadmin_users                                         backfill_dags[]                     @relation("backfill_dags_created_by_idToadmin_users")
  backfill_dags_backfill_dags_updated_by_idToadmin_users                                         backfill_dags[]                     @relation("backfill_dags_updated_by_idToadmin_users")
  client_notifications_client_notifications_created_by_idToadmin_users                           client_notifications[]              @relation("client_notifications_created_by_idToadmin_users")
  client_notifications_client_notifications_updated_by_idToadmin_users                           client_notifications[]              @relation("client_notifications_updated_by_idToadmin_users")
  client_role_privileges_client_role_privileges_created_by_idToadmin_users                       client_role_privileges[]            @relation("client_role_privileges_created_by_idToadmin_users")
  client_role_privileges_client_role_privileges_updated_by_idToadmin_users                       client_role_privileges[]            @relation("client_role_privileges_updated_by_idToadmin_users")
  client_ui_client_ui_created_by_idToadmin_users                                                 client_ui[]                         @relation("client_ui_created_by_idToadmin_users")
  client_ui_client_ui_updated_by_idToadmin_users                                                 client_ui[]                         @relation("client_ui_updated_by_idToadmin_users")
  clients_clients_created_by_idToadmin_users                                                     clients[]                           @relation("clients_created_by_idToadmin_users")
  clients_clients_updated_by_idToadmin_users                                                     clients[]                           @relation("clients_updated_by_idToadmin_users")
  clients_history_clients_history_created_by_idToadmin_users                                     clients_history[]                   @relation("clients_history_created_by_idToadmin_users")
  clients_history_clients_history_updated_by_idToadmin_users                                     clients_history[]                   @relation("clients_history_updated_by_idToadmin_users")
  dags_dags_created_by_idToadmin_users                                                           dags[]                              @relation("dags_created_by_idToadmin_users")
  dags_dags_updated_by_idToadmin_users                                                           dags[]                              @relation("dags_updated_by_idToadmin_users")
  dags_history_dags_history_created_by_idToadmin_users                                           dags_history[]                      @relation("dags_history_created_by_idToadmin_users")
  dags_history_dags_history_updated_by_idToadmin_users                                           dags_history[]                      @relation("dags_history_updated_by_idToadmin_users")
  features_features_created_by_idToadmin_users                                                   features[]                          @relation("features_created_by_idToadmin_users")
  features_features_updated_by_idToadmin_users                                                   features[]                          @relation("features_updated_by_idToadmin_users")
  files_files_created_by_idToadmin_users                                                         files[]                             @relation("files_created_by_idToadmin_users")
  files_files_updated_by_idToadmin_users                                                         files[]                             @relation("files_updated_by_idToadmin_users")
  form_state_histories_form_state_histories_created_by_idToadmin_users                           form_state_histories[]              @relation("form_state_histories_created_by_idToadmin_users")
  form_state_histories_form_state_histories_updated_by_idToadmin_users                           form_state_histories[]              @relation("form_state_histories_updated_by_idToadmin_users")
  form_states_form_states_created_by_idToadmin_users                                             form_states[]                       @relation("form_states_created_by_idToadmin_users")
  form_states_form_states_updated_by_idToadmin_users                                             form_states[]                       @relation("form_states_updated_by_idToadmin_users")
  i18n_locale_i18n_locale_created_by_idToadmin_users                                             i18n_locale[]                       @relation("i18n_locale_created_by_idToadmin_users")
  i18n_locale_i18n_locale_updated_by_idToadmin_users                                             i18n_locale[]                       @relation("i18n_locale_updated_by_idToadmin_users")
  job_histories_job_histories_created_by_idToadmin_users                                         job_histories[]                     @relation("job_histories_created_by_idToadmin_users")
  job_histories_job_histories_updated_by_idToadmin_users                                         job_histories[]                     @relation("job_histories_updated_by_idToadmin_users")
  licenses_licenses_created_by_idToadmin_users                                                   licenses[]                          @relation("licenses_created_by_idToadmin_users")
  licenses_licenses_updated_by_idToadmin_users                                                   licenses[]                          @relation("licenses_updated_by_idToadmin_users")
  pipelines_pipelines_created_by_idToadmin_users                                                 pipelines[]                         @relation("pipelines_created_by_idToadmin_users")
  pipelines_pipelines_updated_by_idToadmin_users                                                 pipelines[]                         @relation("pipelines_updated_by_idToadmin_users")
  pipelines_history_pipelines_history_created_by_idToadmin_users                                 pipelines_history[]                 @relation("pipelines_history_created_by_idToadmin_users")
  pipelines_history_pipelines_history_updated_by_idToadmin_users                                 pipelines_history[]                 @relation("pipelines_history_updated_by_idToadmin_users")
  portal_tooltips_portal_tooltips_created_by_idToadmin_users                                     portal_tooltips[]                   @relation("portal_tooltips_created_by_idToadmin_users")
  portal_tooltips_portal_tooltips_updated_by_idToadmin_users                                     portal_tooltips[]                   @relation("portal_tooltips_updated_by_idToadmin_users")
  promotions_promotions_created_by_idToadmin_users                                               promotions[]                        @relation("promotions_created_by_idToadmin_users")
  promotions_promotions_updated_by_idToadmin_users                                               promotions[]                        @relation("promotions_updated_by_idToadmin_users")
  role_privileges_role_privileges_created_by_idToadmin_users                                     role_privileges[]                   @relation("role_privileges_created_by_idToadmin_users")
  role_privileges_role_privileges_updated_by_idToadmin_users                                     role_privileges[]                   @relation("role_privileges_updated_by_idToadmin_users")
  service_accounts_service_accounts_created_by_idToadmin_users                                   service_accounts[]                  @relation("service_accounts_created_by_idToadmin_users")
  service_accounts_service_accounts_updated_by_idToadmin_users                                   service_accounts[]                  @relation("service_accounts_updated_by_idToadmin_users")
  strapi_api_token_permissions_strapi_api_token_permissions_created_by_idToadmin_users           strapi_api_token_permissions[]      @relation("strapi_api_token_permissions_created_by_idToadmin_users")
  strapi_api_token_permissions_strapi_api_token_permissions_updated_by_idToadmin_users           strapi_api_token_permissions[]      @relation("strapi_api_token_permissions_updated_by_idToadmin_users")
  strapi_api_tokens_strapi_api_tokens_created_by_idToadmin_users                                 strapi_api_tokens[]                 @relation("strapi_api_tokens_created_by_idToadmin_users")
  strapi_api_tokens_strapi_api_tokens_updated_by_idToadmin_users                                 strapi_api_tokens[]                 @relation("strapi_api_tokens_updated_by_idToadmin_users")
  strapi_release_actions_strapi_release_actions_created_by_idToadmin_users                       strapi_release_actions[]            @relation("strapi_release_actions_created_by_idToadmin_users")
  strapi_release_actions_strapi_release_actions_updated_by_idToadmin_users                       strapi_release_actions[]            @relation("strapi_release_actions_updated_by_idToadmin_users")
  strapi_releases_strapi_releases_created_by_idToadmin_users                                     strapi_releases[]                   @relation("strapi_releases_created_by_idToadmin_users")
  strapi_releases_strapi_releases_updated_by_idToadmin_users                                     strapi_releases[]                   @relation("strapi_releases_updated_by_idToadmin_users")
  strapi_transfer_token_permissions_strapi_transfer_token_permissions_created_by_idToadmin_users strapi_transfer_token_permissions[] @relation("strapi_transfer_token_permissions_created_by_idToadmin_users")
  strapi_transfer_token_permissions_strapi_transfer_token_permissions_updated_by_idToadmin_users strapi_transfer_token_permissions[] @relation("strapi_transfer_token_permissions_updated_by_idToadmin_users")
  strapi_transfer_tokens_strapi_transfer_tokens_created_by_idToadmin_users                       strapi_transfer_tokens[]            @relation("strapi_transfer_tokens_created_by_idToadmin_users")
  strapi_transfer_tokens_strapi_transfer_tokens_updated_by_idToadmin_users                       strapi_transfer_tokens[]            @relation("strapi_transfer_tokens_updated_by_idToadmin_users")
  up_permissions_up_permissions_created_by_idToadmin_users                                       up_permissions[]                    @relation("up_permissions_created_by_idToadmin_users")
  up_permissions_up_permissions_updated_by_idToadmin_users                                       up_permissions[]                    @relation("up_permissions_updated_by_idToadmin_users")
  up_roles_up_roles_created_by_idToadmin_users                                                   up_roles[]                          @relation("up_roles_created_by_idToadmin_users")
  up_roles_up_roles_updated_by_idToadmin_users                                                   up_roles[]                          @relation("up_roles_updated_by_idToadmin_users")
  up_users_up_users_created_by_idToadmin_users                                                   up_users[]                          @relation("up_users_created_by_idToadmin_users")
  up_users_up_users_updated_by_idToadmin_users                                                   up_users[]                          @relation("up_users_updated_by_idToadmin_users")
  upload_folders_upload_folders_created_by_idToadmin_users                                       upload_folders[]                    @relation("upload_folders_created_by_idToadmin_users")
  upload_folders_upload_folders_updated_by_idToadmin_users                                       upload_folders[]                    @relation("upload_folders_updated_by_idToadmin_users")
  usecases_usecases_created_by_idToadmin_users                                                   usecases[]                          @relation("usecases_created_by_idToadmin_users")
  usecases_usecases_updated_by_idToadmin_users                                                   usecases[]                          @relation("usecases_updated_by_idToadmin_users")
  usecases_history_usecases_history_created_by_idToadmin_users                                   usecases_history[]                  @relation("usecases_history_created_by_idToadmin_users")
  usecases_history_usecases_history_updated_by_idToadmin_users                                   usecases_history[]                  @relation("usecases_history_updated_by_idToadmin_users")
  user_notifications_user_notifications_created_by_idToadmin_users                               user_notifications[]                @relation("user_notifications_created_by_idToadmin_users")
  user_notifications_user_notifications_updated_by_idToadmin_users                               user_notifications[]                @relation("user_notifications_updated_by_idToadmin_users")
  user_privileges_user_privileges_created_by_idToadmin_users                                     user_privileges[]                   @relation("user_privileges_created_by_idToadmin_users")
  user_privileges_user_privileges_updated_by_idToadmin_users                                     user_privileges[]                   @relation("user_privileges_updated_by_idToadmin_users")
  user_role_client_relations_user_role_client_relations_created_by_idToadmin_users               user_role_client_relations[]        @relation("user_role_client_relations_created_by_idToadmin_users")
  user_role_client_relations_user_role_client_relations_updated_by_idToadmin_users               user_role_client_relations[]        @relation("user_role_client_relations_updated_by_idToadmin_users")

  // @@index([created_by_id], map: "admin_users_created_by_id_fk")
  // @@index([updated_by_id], map: "admin_users_updated_by_id_fk")
}

model admin_users_roles_links {
  id          Int          @id @default(autoincrement())
  user_id     Int?
  role_id     Int?
  role_order  Float?
  user_order  Float?
  admin_users admin_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "admin_users_roles_links_fk")
  admin_roles admin_roles? @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "admin_users_roles_links_inv_fk")

  // @@index([user_id], map: "admin_users_roles_links_fk")
  // @@index([role_id], map: "admin_users_roles_links_inv_fk")
  // @@index([role_order], map: "admin_users_roles_links_order_fk")
  // @@index([user_order], map: "admin_users_roles_links_order_inv_fk")
  @@unique([user_id, role_id], map: "admin_users_roles_links_unique")
}

model backfill_dags {
  id                                                   Int                            @id @default(autoincrement())
  name                                                 String?                        @db.VarChar(255)
  dag_config                                           Json?
  created_at                                           DateTime?                      @db.Timestamp(6)
  updated_at                                           DateTime?                      @db.Timestamp(6)
  created_by_id                                        Int?
  updated_by_id                                        Int?
  start_date                                           DateTime?                      @db.Date
  end_date                                             DateTime?                      @db.Date
  admin_users_backfill_dags_created_by_idToadmin_users admin_users?                   @relation("backfill_dags_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "backfill_dags_created_by_id_fk")
  admin_users_backfill_dags_updated_by_idToadmin_users admin_users?                   @relation("backfill_dags_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "backfill_dags_updated_by_id_fk")
  backfill_dags_client_links                           backfill_dags_client_links[]
  backfill_dags_pipeline_links                         backfill_dags_pipeline_links[]
  backfill_dags_usecase_links                          backfill_dags_usecase_links[]

  // @@index([created_by_id], map: "backfill_dags_created_by_id_fk")
  // @@index([updated_by_id], map: "backfill_dags_updated_by_id_fk")
}

model backfill_dags_client_links {
  id              Int            @id @default(autoincrement())
  backfill_dag_id Int?
  client_id       Int?
  backfill_dags   backfill_dags? @relation(fields: [backfill_dag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "backfill_dags_client_links_fk")
  clients         clients?       @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "backfill_dags_client_links_inv_fk")

  // @@index([backfill_dag_id], map: "backfill_dags_client_links_fk")
  // @@index([client_id], map: "backfill_dags_client_links_inv_fk")
  @@unique([backfill_dag_id, client_id], map: "backfill_dags_client_links_unique")
}

model backfill_dags_pipeline_links {
  id              Int            @id @default(autoincrement())
  backfill_dag_id Int?
  pipeline_id     Int?
  backfill_dags   backfill_dags? @relation(fields: [backfill_dag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "backfill_dags_pipeline_links_fk")
  pipelines       pipelines?     @relation(fields: [pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "backfill_dags_pipeline_links_inv_fk")

  // @@index([backfill_dag_id], map: "backfill_dags_pipeline_links_fk")
  // @@index([pipeline_id], map: "backfill_dags_pipeline_links_inv_fk")
  @@unique([backfill_dag_id, pipeline_id], map: "backfill_dags_pipeline_links_unique")
}

model backfill_dags_usecase_links {
  id              Int            @id @default(autoincrement())
  backfill_dag_id Int?
  usecase_id      Int?
  backfill_dags   backfill_dags? @relation(fields: [backfill_dag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "backfill_dags_usecase_links_fk")
  usecases        usecases?      @relation(fields: [usecase_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "backfill_dags_usecase_links_inv_fk")

  // @@index([backfill_dag_id], map: "backfill_dags_usecase_links_fk")
  // @@index([usecase_id], map: "backfill_dags_usecase_links_inv_fk")
  @@unique([backfill_dag_id, usecase_id], map: "backfill_dags_usecase_links_unique")
}

model client_notifications {
  id                                                          Int                                            @id @default(autoincrement())
  message_id                                                  String?                                        @db.VarChar(255)
  message                                                     String?
  publish_time                                                DateTime?                                      @db.Timestamp(6)
  level                                                       String?                                        @db.VarChar(255)
  task_name                                                   String?                                        @db.VarChar(255)
  created_at                                                  DateTime?                                      @db.Timestamp(6)
  updated_at                                                  DateTime?                                      @db.Timestamp(6)
  created_by_id                                               Int?
  updated_by_id                                               Int?
  product_mode                                                String?                                        @db.VarChar(255)
  pipeline                                                    String?                                        @db.VarChar(255)
  admin_users_client_notifications_created_by_idToadmin_users admin_users?                                   @relation("client_notifications_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "client_notifications_created_by_id_fk")
  admin_users_client_notifications_updated_by_idToadmin_users admin_users?                                   @relation("client_notifications_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "client_notifications_updated_by_id_fk")
  client_notifications_client_links                           client_notifications_client_links[]
  client_notifications_usecase_links                          client_notifications_usecase_links[]
  user_notifications_client_notification_links                user_notifications_client_notification_links[]

  // @@index([created_by_id], map: "client_notifications_created_by_id_fk")
  // @@index([updated_by_id], map: "client_notifications_updated_by_id_fk")
}

model client_notifications_client_links {
  id                     Int                   @id @default(autoincrement())
  client_notification_id Int?
  client_id              Int?
  client_notifications   client_notifications? @relation(fields: [client_notification_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "client_notifications_client_links_fk")
  clients                clients?              @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "client_notifications_client_links_inv_fk")

  // @@index([client_notification_id], map: "client_notifications_client_links_fk")
  // @@index([client_id], map: "client_notifications_client_links_inv_fk")
  @@unique([client_notification_id, client_id], map: "client_notifications_client_links_unique")
}

model client_notifications_usecase_links {
  id                     Int                   @id @default(autoincrement())
  client_notification_id Int?
  usecase_id             Int?
  client_notifications   client_notifications? @relation(fields: [client_notification_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "client_notifications_usecase_links_fk")
  usecases               usecases?             @relation(fields: [usecase_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "client_notifications_usecase_links_inv_fk")

  // @@index([client_notification_id], map: "client_notifications_usecase_links_fk")
  // @@index([usecase_id], map: "client_notifications_usecase_links_inv_fk")
  @@unique([client_notification_id, usecase_id], map: "client_notifications_usecase_links_unique")
}

model client_role_privileges {
  id                                                            Int                                    @id @default(autoincrement())
  enabled                                                       Boolean?
  created_at                                                    DateTime?                              @db.Timestamp(6)
  updated_at                                                    DateTime?                              @db.Timestamp(6)
  created_by_id                                                 Int?
  updated_by_id                                                 Int?
  admin_users_client_role_privileges_created_by_idToadmin_users admin_users?                           @relation("client_role_privileges_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "client_role_privileges_created_by_id_fk")
  admin_users_client_role_privileges_updated_by_idToadmin_users admin_users?                           @relation("client_role_privileges_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "client_role_privileges_updated_by_id_fk")
  client_role_privileges_client_links                           client_role_privileges_client_links[]
  client_role_privileges_feature_links                          client_role_privileges_feature_links[]
  client_role_privileges_role_links                             client_role_privileges_role_links[]

  // @@index([created_by_id], map: "client_role_privileges_created_by_id_fk")
  // @@index([updated_by_id], map: "client_role_privileges_updated_by_id_fk")
}

model client_role_privileges_client_links {
  id                       Int                     @id @default(autoincrement())
  client_role_privilege_id Int?
  client_id                Int?
  client_role_privileges   client_role_privileges? @relation(fields: [client_role_privilege_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "client_role_privileges_client_links_fk")
  clients                  clients?                @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "client_role_privileges_client_links_inv_fk")

  // @@index([client_role_privilege_id], map: "client_role_privileges_client_links_fk")
  // @@index([client_id], map: "client_role_privileges_client_links_inv_fk")
  @@unique([client_role_privilege_id, client_id], map: "client_role_privileges_client_links_unique")
}

model client_role_privileges_feature_links {
  id                       Int                     @id @default(autoincrement())
  client_role_privilege_id Int?
  feature_id               Int?
  client_role_privileges   client_role_privileges? @relation(fields: [client_role_privilege_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "client_role_privileges_feature_links_fk")
  features                 features?               @relation(fields: [feature_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "client_role_privileges_feature_links_inv_fk")

  // @@index([client_role_privilege_id], map: "client_role_privileges_feature_links_fk")
  // @@index([feature_id], map: "client_role_privileges_feature_links_inv_fk")
  @@unique([client_role_privilege_id, feature_id], map: "client_role_privileges_feature_links_unique")
}

model client_role_privileges_role_links {
  id                       Int                     @id @default(autoincrement())
  client_role_privilege_id Int?
  role_id                  Int?
  client_role_privileges   client_role_privileges? @relation(fields: [client_role_privilege_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "client_role_privileges_role_links_fk")
  up_roles                 up_roles?               @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "client_role_privileges_role_links_inv_fk")

  // @@index([client_role_privilege_id], map: "client_role_privileges_role_links_fk")
  // @@index([role_id], map: "client_role_privileges_role_links_inv_fk")
  @@unique([client_role_privilege_id, role_id], map: "client_role_privileges_role_links_unique")
}

model client_ui {
  id                                               Int          @id @default(autoincrement())
  maintenance_mode                                 Boolean?
  readonly                                         Boolean?
  created_at                                       DateTime?    @db.Timestamp(6)
  updated_at                                       DateTime?    @db.Timestamp(6)
  created_by_id                                    Int?
  updated_by_id                                    Int?
  admin_users_client_ui_created_by_idToadmin_users admin_users? @relation("client_ui_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "client_ui_created_by_id_fk")
  admin_users_client_ui_updated_by_idToadmin_users admin_users? @relation("client_ui_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "client_ui_updated_by_id_fk")

  // @@index([created_by_id], map: "client_ui_created_by_id_fk")
  // @@index([updated_by_id], map: "client_ui_updated_by_id_fk")
}

model clients {
  id                                             Int                                   @id @default(autoincrement())
  name                                           String?                               @db.VarChar(255)
  config                                         Json?
  display_name                                   String?                               @db.VarChar(255)
  created_at                                     DateTime?                             @db.Timestamp(6)
  updated_at                                     DateTime?                             @db.Timestamp(6)
  created_by_id                                  Int?
  updated_by_id                                  Int?
  service_account                                String?                               @db.VarChar(255)
  backfill_dags_client_links                     backfill_dags_client_links[]
  client_notifications_client_links              client_notifications_client_links[]
  client_role_privileges_client_links            client_role_privileges_client_links[]
  admin_users_clients_created_by_idToadmin_users admin_users?                          @relation("clients_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "clients_created_by_id_fk")
  admin_users_clients_updated_by_idToadmin_users admin_users?                          @relation("clients_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "clients_updated_by_id_fk")
  clients_components                             clients_components[]
  clients_created_by_user_links                  clients_created_by_user_links[]
  clients_history_original_links                 clients_history_original_links[]
  clients_updated_by_user_links                  clients_updated_by_user_links[]
  dags_client_links                              dags_client_links[]
  dags_history_client_links                      dags_history_client_links[]
  form_state_histories_client_links              form_state_histories_client_links[]
  form_states_client_links                       form_states_client_links[]
  job_histories_client_links                     job_histories_client_links[]
  licenses_client_links                          licenses_client_links[]
  pipelines_client_links                         pipelines_client_links[]
  pipelines_history_client_links                 pipelines_history_client_links[]
  promotions_client_links                        promotions_client_links[]
  service_accounts_client_links                  service_accounts_client_links[]
  up_users_clients_links                         up_users_clients_links[]
  usecases_client_links                          usecases_client_links[]
  usecases_history_client_links                  usecases_history_client_links[]
  user_privileges_client_links                   user_privileges_client_links[]

  // @@index([created_by_id], map: "clients_created_by_id_fk")
  // @@index([updated_by_id], map: "clients_updated_by_id_fk")
}

model clients_components {
  id             Int      @id @default(autoincrement())
  entity_id      Int?
  component_id   Int?
  component_type String?  @db.VarChar(255)
  field          String?  @db.VarChar(255)
  order          Float?
  clients        clients? @relation(fields: [entity_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "clients_entity_fk")

  // @@index([component_type], map: "clients_component_type_index")
  // @@index([entity_id], map: "clients_entity_fk")
  // @@index([field], map: "clients_field_index")
  @@unique([entity_id, component_id, field, component_type], map: "clients_unique")
}

model clients_created_by_user_links {
  id        Int       @id @default(autoincrement())
  client_id Int?
  user_id   Int?
  clients   clients?  @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "clients_created_by_user_links_fk")
  up_users  up_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "clients_created_by_user_links_inv_fk")

  // @@index([client_id], map: "clients_created_by_user_links_fk")
  // @@index([user_id], map: "clients_created_by_user_links_inv_fk")
  @@unique([client_id, user_id], map: "clients_created_by_user_links_unique")
}

model clients_history {
  id                                                     Int                                     @id @default(autoincrement())
  name                                                   String?                                 @db.VarChar(255)
  config                                                 Json?
  created_at                                             DateTime?                               @db.Timestamp(6)
  updated_at                                             DateTime?                               @db.Timestamp(6)
  created_by_id                                          Int?
  updated_by_id                                          Int?
  display_name                                           String?                                 @db.VarChar(255)
  service_account                                        String?                                 @db.VarChar(255)
  admin_users_clients_history_created_by_idToadmin_users admin_users?                            @relation("clients_history_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "clients_history_created_by_id_fk")
  admin_users_clients_history_updated_by_idToadmin_users admin_users?                            @relation("clients_history_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "clients_history_updated_by_id_fk")
  clients_history_created_by_user_links                  clients_history_created_by_user_links[]
  clients_history_original_links                         clients_history_original_links[]
  clients_history_updated_by_user_links                  clients_history_updated_by_user_links[]

  // @@index([created_by_id], map: "clients_history_created_by_id_fk")
  // @@index([updated_by_id], map: "clients_history_updated_by_id_fk")
}

model clients_history_created_by_user_links {
  id                Int              @id @default(autoincrement())
  client_history_id Int?
  user_id           Int?
  clients_history   clients_history? @relation(fields: [client_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "clients_history_created_by_user_links_fk")
  up_users          up_users?        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "clients_history_created_by_user_links_inv_fk")

  // @@index([client_history_id], map: "clients_history_created_by_user_links_fk")
  // @@index([user_id], map: "clients_history_created_by_user_links_inv_fk")
  @@unique([client_history_id, user_id], map: "clients_history_created_by_user_links_unique")
}

model clients_history_original_links {
  id                Int              @id @default(autoincrement())
  client_history_id Int?
  client_id         Int?
  clients_history   clients_history? @relation(fields: [client_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "clients_history_original_links_fk")
  clients           clients?         @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "clients_history_original_links_inv_fk")

  // @@index([client_history_id], map: "clients_history_original_links_fk")
  // @@index([client_id], map: "clients_history_original_links_inv_fk")
  @@unique([client_history_id, client_id], map: "clients_history_original_links_unique")
}

model clients_history_updated_by_user_links {
  id                Int              @id @default(autoincrement())
  client_history_id Int?
  user_id           Int?
  clients_history   clients_history? @relation(fields: [client_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "clients_history_updated_by_user_links_fk")
  up_users          up_users?        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "clients_history_updated_by_user_links_inv_fk")

  // @@index([client_history_id], map: "clients_history_updated_by_user_links_fk")
  // @@index([user_id], map: "clients_history_updated_by_user_links_inv_fk")
  @@unique([client_history_id, user_id], map: "clients_history_updated_by_user_links_unique")
}

model clients_updated_by_user_links {
  id        Int       @id @default(autoincrement())
  client_id Int?
  user_id   Int?
  clients   clients?  @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "clients_updated_by_user_links_fk")
  up_users  up_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "clients_updated_by_user_links_inv_fk")

  // @@index([client_id], map: "clients_updated_by_user_links_fk")
  // @@index([user_id], map: "clients_updated_by_user_links_inv_fk")
  @@unique([client_id, user_id], map: "clients_updated_by_user_links_unique")
}

model components_customer_users {
  id                                   Int                                    @id @default(autoincrement())
  email                                String?                                @db.VarChar(255)
  components_customer_users_user_links components_customer_users_user_links[]
}

model components_customer_users_user_links {
  id                        Int                        @id @default(autoincrement())
  users_id                  Int?
  user_id                   Int?
  components_customer_users components_customer_users? @relation(fields: [users_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "components_customer_users_user_links_fk")
  up_users                  up_users?                  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "components_customer_users_user_links_inv_fk")

  // @@index([users_id], map: "components_customer_users_user_links_fk")
  // @@index([user_id], map: "components_customer_users_user_links_inv_fk")
  @@unique([users_id, user_id], map: "components_customer_users_user_links_unique")
}

model components_dimensions_dimensions {
  id        Int     @id @default(autoincrement())
  dimension String? @db.VarChar(255)
}

model components_help_help_tooltips {
  id                                                  Int                                                   @id @default(autoincrement())
  uid                                                 String?                                               @db.VarChar(255)
  text                                                String?
  components_help_help_tooltips_created_by_user_links components_help_help_tooltips_created_by_user_links[]
  components_help_help_tooltips_updated_by_user_links components_help_help_tooltips_updated_by_user_links[]
}

model components_help_help_tooltips_created_by_user_links {
  id                            Int                            @id @default(autoincrement())
  help_tooltip_id               Int?
  user_id                       Int?
  components_help_help_tooltips components_help_help_tooltips? @relation(fields: [help_tooltip_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "components_help_help_tooltips_created_by_user_links_fk")
  up_users                      up_users?                      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "components_help_help_tooltips_created_by_user_links_inv_fk")

  // @@index([help_tooltip_id], map: "components_help_help_tooltips_created_by_user_links_fk")
  // @@index([user_id], map: "components_help_help_tooltips_created_by_user_links_inv_fk")
  @@unique([help_tooltip_id, user_id], map: "components_help_help_tooltips_created_by_user_links_unique")
}

model components_help_help_tooltips_updated_by_user_links {
  id                            Int                            @id @default(autoincrement())
  help_tooltip_id               Int?
  user_id                       Int?
  components_help_help_tooltips components_help_help_tooltips? @relation(fields: [help_tooltip_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "components_help_help_tooltips_updated_by_user_links_fk")
  up_users                      up_users?                      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "components_help_help_tooltips_updated_by_user_links_inv_fk")

  // @@index([help_tooltip_id], map: "components_help_help_tooltips_updated_by_user_links_fk")
  // @@index([user_id], map: "components_help_help_tooltips_updated_by_user_links_inv_fk")
  @@unique([help_tooltip_id, user_id], map: "components_help_help_tooltips_updated_by_user_links_unique")
}

model components_helpers_tags {
  id    Int     @id @default(autoincrement())
  value String? @db.VarChar(255)
}

model dags {
  id                                          Int                           @id @default(autoincrement())
  name                                        String?                       @db.VarChar(255)
  config                                      Json?
  created_at                                  DateTime?                     @db.Timestamp(6)
  updated_at                                  DateTime?                     @db.Timestamp(6)
  created_by_id                               Int?
  updated_by_id                               Int?
  manual                                      Boolean?
  admin_users_dags_created_by_idToadmin_users admin_users?                  @relation("dags_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "dags_created_by_id_fk")
  admin_users_dags_updated_by_idToadmin_users admin_users?                  @relation("dags_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "dags_updated_by_id_fk")
  dags_client_links                           dags_client_links[]
  dags_history_original_links                 dags_history_original_links[]

  // @@index([created_by_id], map: "dags_created_by_id_fk")
  // @@index([updated_by_id], map: "dags_updated_by_id_fk")
}

model dags_client_links {
  id        Int      @id @default(autoincrement())
  dag_id    Int?
  client_id Int?
  dags      dags?    @relation(fields: [dag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "dags_client_links_fk")
  clients   clients? @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "dags_client_links_inv_fk")

  // @@index([dag_id], map: "dags_client_links_fk")
  // @@index([client_id], map: "dags_client_links_inv_fk")
  @@unique([dag_id, client_id], map: "dags_client_links_unique")
}

model dags_history {
  id                                                  Int                           @id @default(autoincrement())
  name                                                String?                       @db.VarChar(255)
  config                                              Json?
  created_at                                          DateTime?                     @db.Timestamp(6)
  updated_at                                          DateTime?                     @db.Timestamp(6)
  created_by_id                                       Int?
  updated_by_id                                       Int?
  manual                                              Boolean?
  admin_users_dags_history_created_by_idToadmin_users admin_users?                  @relation("dags_history_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "dags_history_created_by_id_fk")
  admin_users_dags_history_updated_by_idToadmin_users admin_users?                  @relation("dags_history_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "dags_history_updated_by_id_fk")
  dags_history_client_links                           dags_history_client_links[]
  dags_history_original_links                         dags_history_original_links[]

  // @@index([created_by_id], map: "dags_history_created_by_id_fk")
  // @@index([updated_by_id], map: "dags_history_updated_by_id_fk")
}

model dags_history_client_links {
  id             Int           @id @default(autoincrement())
  dag_history_id Int?
  client_id      Int?
  dags_history   dags_history? @relation(fields: [dag_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "dags_history_client_links_fk")
  clients        clients?      @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "dags_history_client_links_inv_fk")

  // @@index([dag_history_id], map: "dags_history_client_links_fk")
  // @@index([client_id], map: "dags_history_client_links_inv_fk")
  @@unique([dag_history_id, client_id], map: "dags_history_client_links_unique")
}

model dags_history_original_links {
  id             Int           @id @default(autoincrement())
  dag_history_id Int?
  dag_id         Int?
  dags_history   dags_history? @relation(fields: [dag_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "dags_history_original_links_fk")
  dags           dags?         @relation(fields: [dag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "dags_history_original_links_inv_fk")

  // @@index([dag_history_id], map: "dags_history_original_links_fk")
  // @@index([dag_id], map: "dags_history_original_links_inv_fk")
  @@unique([dag_history_id, dag_id], map: "dags_history_original_links_unique")
}

model features {
  id                                              Int                                    @id @default(autoincrement())
  category                                        String?                                @db.VarChar(255)
  name                                            String?                                @db.VarChar(255)
  display_name                                    String?                                @db.VarChar(255)
  uid                                             String?                                @unique(map: "features_uid_unique") @db.VarChar(255)
  enabled                                         Boolean?
  created_at                                      DateTime?                              @db.Timestamp(6)
  updated_at                                      DateTime?                              @db.Timestamp(6)
  created_by_id                                   Int?
  updated_by_id                                   Int?
  client_role_privileges_feature_links            client_role_privileges_feature_links[]
  admin_users_features_created_by_idToadmin_users admin_users?                           @relation("features_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "features_created_by_id_fk")
  admin_users_features_updated_by_idToadmin_users admin_users?                           @relation("features_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "features_updated_by_id_fk")
  role_privileges_feature_links                   role_privileges_feature_links[]
  user_privileges_features_links                  user_privileges_features_links[]

  // @@index([created_by_id], map: "features_created_by_id_fk")
  // @@index([updated_by_id], map: "features_updated_by_id_fk")
}

model files {
  id                                           Int                    @id @default(autoincrement())
  name                                         String?                @db.VarChar(255)
  alternative_text                             String?                @db.VarChar(255)
  caption                                      String?                @db.VarChar(255)
  width                                        Int?
  height                                       Int?
  formats                                      Json?
  hash                                         String?                @db.VarChar(255)
  ext                                          String?                @db.VarChar(255)
  mime                                         String?                @db.VarChar(255)
  size                                         Decimal?               @db.Decimal(10, 2)
  url                                          String?                @db.VarChar(255)
  preview_url                                  String?                @db.VarChar(255)
  provider                                     String?                @db.VarChar(255)
  provider_metadata                            Json?
  folder_path                                  String?                @db.VarChar(255)
  created_at                                   DateTime?              @db.Timestamp(6)
  updated_at                                   DateTime?              @db.Timestamp(6)
  created_by_id                                Int?
  updated_by_id                                Int?
  admin_users_files_created_by_idToadmin_users admin_users?           @relation("files_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "files_created_by_id_fk")
  admin_users_files_updated_by_idToadmin_users admin_users?           @relation("files_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "files_updated_by_id_fk")
  files_folder_links                           files_folder_links[]
  files_related_morphs                         files_related_morphs[]

  // @@index([created_by_id], map: "files_created_by_id_fk")
  // @@index([updated_by_id], map: "files_updated_by_id_fk")
  // @@index([created_at], map: "upload_files_created_at_index")
  // @@index([ext], map: "upload_files_ext_index")
  // @@index([folder_path], map: "upload_files_folder_path_index")
  // @@index([name], map: "upload_files_name_index")
  // @@index([size], map: "upload_files_size_index")
  // @@index([updated_at], map: "upload_files_updated_at_index")
}

model files_folder_links {
  id             Int             @id @default(autoincrement())
  file_id        Int?
  folder_id      Int?
  file_order     Float?
  files          files?          @relation(fields: [file_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "files_folder_links_fk")
  upload_folders upload_folders? @relation(fields: [folder_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "files_folder_links_inv_fk")

  // @@index([file_id], map: "files_folder_links_fk")
  // @@index([folder_id], map: "files_folder_links_inv_fk")
  // @@index([file_order], map: "files_folder_links_order_inv_fk")
  @@unique([file_id, folder_id], map: "files_folder_links_unique")
}

model files_related_morphs {
  id           Int     @id @default(autoincrement())
  file_id      Int?
  related_id   Int?
  related_type String? @db.VarChar(255)
  field        String? @db.VarChar(255)
  order        Float?
  files        files?  @relation(fields: [file_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "files_related_morphs_fk")

  // @@index([file_id], map: "files_related_morphs_fk")
  // @@index([related_id], map: "files_related_morphs_id_column_index")
  // @@index([order], map: "files_related_morphs_order_index")
}

model form_state_histories {
  id                                                          Int                                          @id @default(autoincrement())
  name                                                        String?                                      @db.VarChar(255)
  state                                                       Json?
  created_at                                                  DateTime?                                    @db.Timestamp(6)
  updated_at                                                  DateTime?                                    @db.Timestamp(6)
  created_by_id                                               Int?
  updated_by_id                                               Int?
  experimenter                                                String?                                      @db.VarChar(255)
  variants_data_map                                           Json?
  imported_images                                             Json?
  linked_images                                               Json?
  imported_campaigns                                          Json?
  imported_audiences                                          Json?
  current_imported_templates                                  Json?
  selected_audience_ids                                       Json?
  selected_frequencies_array                                  Json?
  selected_days_array                                         Json?
  selected_time_zone_type                                     String?                                      @db.VarChar(255)
  selected_time_of_day                                        Json?
  offerfit_created_templates                                  Json?
  selected_offerfit_group_percent                             Int?
  selected_control_group_percent                              Int?
  selected_time_zone                                          String?                                      @db.VarChar(255)
  platform                                                    String?                                      @db.VarChar(255)
  platform_needs_update_flag                                  Boolean?
  braze_api_key                                               String?                                      @db.VarChar(255)
  braze_dashboard_url                                         String?                                      @db.VarChar(255)
  braze_campaign_id                                           String?                                      @db.VarChar(255)
  braze_data_sharing_agreement                                Boolean?
  braze_message_variation_id                                  String?                                      @db.VarChar(255)
  braze_email_from                                            String?                                      @db.VarChar(255)
  braze_app_id                                                String?                                      @db.VarChar(255)
  sfmc_plugin_installed                                       Boolean?
  sfmc_client_id                                              String?                                      @db.VarChar(255)
  sfmc_data_sharing_agreement                                 Boolean?
  sfmc_client_secret                                          String?                                      @db.VarChar(255)
  sfmc_auth_base_uri                                          String?                                      @db.VarChar(255)
  sfmc_rest_base_uri                                          String?                                      @db.VarChar(255)
  sfmc_soap_base_uri                                          String?                                      @db.VarChar(255)
  sfmc_query_submit_clicked                                   Boolean?
  sfmc_journey_submit_clicked                                 Boolean?
  sfmc_query_needs_update_flag                                Boolean?
  sfmc_journey_needs_update_flag                              Boolean?
  klaviyo_api_key                                             String?                                      @db.VarChar(255)
  klaviyo_data_sharing_agreement                              Boolean?
  klaviyo_flow_name                                           String?                                      @db.VarChar(255)
  integration_connection_date                                 DateTime?                                    @db.Timestamp(6)
  selected_bau_campaign_ids                                   Json?
  is_adding_bau_campaign                                      Boolean?
  selected_base_email_guardrails                              Json?
  selected_variants_guardrails                                Json?
  type                                                        String?                                      @db.VarChar(255)
  start_date                                                  DateTime?                                    @db.Date
  end_date                                                    DateTime?                                    @db.Date
  guardrails_status                                           String?                                      @db.VarChar(255)
  admin_users_form_state_histories_created_by_idToadmin_users admin_users?                                 @relation("form_state_histories_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "form_state_histories_created_by_id_fk")
  admin_users_form_state_histories_updated_by_idToadmin_users admin_users?                                 @relation("form_state_histories_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "form_state_histories_updated_by_id_fk")
  form_state_histories_client_links                           form_state_histories_client_links[]
  form_state_histories_created_by_user_links                  form_state_histories_created_by_user_links[]
  form_state_histories_original_links                         form_state_histories_original_links[]
  form_state_histories_updated_by_user_links                  form_state_histories_updated_by_user_links[]

  // @@index([created_by_id], map: "form_state_histories_created_by_id_fk")
  // @@index([updated_by_id], map: "form_state_histories_updated_by_id_fk")
}

model form_state_histories_client_links {
  id                    Int                   @id @default(autoincrement())
  form_state_history_id Int?
  client_id             Int?
  form_state_histories  form_state_histories? @relation(fields: [form_state_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "form_state_histories_client_links_fk")
  clients               clients?              @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "form_state_histories_client_links_inv_fk")

  // @@index([form_state_history_id], map: "form_state_histories_client_links_fk")
  // @@index([client_id], map: "form_state_histories_client_links_inv_fk")
  @@unique([form_state_history_id, client_id], map: "form_state_histories_client_links_unique")
}

model form_state_histories_created_by_user_links {
  id                    Int                   @id @default(autoincrement())
  form_state_history_id Int?
  user_id               Int?
  form_state_histories  form_state_histories? @relation(fields: [form_state_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "form_state_histories_created_by_user_links_fk")
  up_users              up_users?             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "form_state_histories_created_by_user_links_inv_fk")

  // @@index([form_state_history_id], map: "form_state_histories_created_by_user_links_fk")
  // @@index([user_id], map: "form_state_histories_created_by_user_links_inv_fk")
  @@unique([form_state_history_id, user_id], map: "form_state_histories_created_by_user_links_unique")
}

model form_state_histories_original_links {
  id                    Int                   @id @default(autoincrement())
  form_state_history_id Int?
  form_state_id         Int?
  form_state_histories  form_state_histories? @relation(fields: [form_state_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "form_state_histories_original_links_fk")
  form_states           form_states?          @relation(fields: [form_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "form_state_histories_original_links_inv_fk")

  // @@index([form_state_history_id], map: "form_state_histories_original_links_fk")
  // @@index([form_state_id], map: "form_state_histories_original_links_inv_fk")
  @@unique([form_state_history_id, form_state_id], map: "form_state_histories_original_links_unique")
}

model form_state_histories_updated_by_user_links {
  id                    Int                   @id @default(autoincrement())
  form_state_history_id Int?
  user_id               Int?
  form_state_histories  form_state_histories? @relation(fields: [form_state_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "form_state_histories_updated_by_user_links_fk")
  up_users              up_users?             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "form_state_histories_updated_by_user_links_inv_fk")

  // @@index([form_state_history_id], map: "form_state_histories_updated_by_user_links_fk")
  // @@index([user_id], map: "form_state_histories_updated_by_user_links_inv_fk")
  @@unique([form_state_history_id, user_id], map: "form_state_histories_updated_by_user_links_unique")
}

model form_states {
  id                                                 Int                                   @id @default(autoincrement())
  name                                               String?                               @db.VarChar(255)
  state                                              Json?
  created_at                                         DateTime?                             @db.Timestamp(6)
  updated_at                                         DateTime?                             @db.Timestamp(6)
  created_by_id                                      Int?
  updated_by_id                                      Int?
  experimenter                                       String?                               @db.VarChar(255)
  variants_data_map                                  Json?
  imported_images                                    Json?
  linked_images                                      Json?
  imported_campaigns                                 Json?
  imported_audiences                                 Json?
  current_imported_templates                         Json?
  selected_audience_ids                              Json?
  selected_frequencies_array                         Json?
  selected_days_array                                Json?
  selected_time_zone_type                            String?                               @db.VarChar(255)
  selected_time_of_day                               Json?
  offerfit_created_templates                         Json?
  selected_offerfit_group_percent                    Int?
  selected_control_group_percent                     Int?
  selected_time_zone                                 String?                               @db.VarChar(255)
  platform                                           String?                               @db.VarChar(255)
  platform_needs_update_flag                         Boolean?
  braze_api_key                                      String?                               @db.VarChar(255)
  braze_dashboard_url                                String?                               @db.VarChar(255)
  braze_campaign_id                                  String?                               @db.VarChar(255)
  braze_data_sharing_agreement                       Boolean?
  braze_message_variation_id                         String?                               @db.VarChar(255)
  braze_email_from                                   String?                               @db.VarChar(255)
  braze_app_id                                       String?                               @db.VarChar(255)
  sfmc_plugin_installed                              Boolean?
  sfmc_client_id                                     String?                               @db.VarChar(255)
  sfmc_data_sharing_agreement                        Boolean?
  sfmc_client_secret                                 String?                               @db.VarChar(255)
  sfmc_auth_base_uri                                 String?                               @db.VarChar(255)
  sfmc_rest_base_uri                                 String?                               @db.VarChar(255)
  sfmc_soap_base_uri                                 String?                               @db.VarChar(255)
  sfmc_query_submit_clicked                          Boolean?
  sfmc_journey_submit_clicked                        Boolean?
  sfmc_query_needs_update_flag                       Boolean?
  sfmc_journey_needs_update_flag                     Boolean?
  klaviyo_api_key                                    String?                               @db.VarChar(255)
  klaviyo_data_sharing_agreement                     Boolean?
  klaviyo_flow_name                                  String?                               @db.VarChar(255)
  integration_connection_date                        DateTime?                             @db.Timestamp(6)
  selected_bau_campaign_ids                          Json?
  is_adding_bau_campaign                             Boolean?
  selected_base_email_guardrails                     Json?
  selected_variants_guardrails                       Json?
  type                                               String?                               @db.VarChar(255)
  start_date                                         DateTime?                             @db.Date
  end_date                                           DateTime?                             @db.Date
  updated_selected_time_zone_at                      DateTime?                             @db.Timestamp(6)
  updated_selected_time_of_day_at                    DateTime?                             @db.Timestamp(6)
  guardrails_status                                  String?                               @db.VarChar(255)
  form_state_histories_original_links                form_state_histories_original_links[]
  admin_users_form_states_created_by_idToadmin_users admin_users?                          @relation("form_states_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "form_states_created_by_id_fk")
  admin_users_form_states_updated_by_idToadmin_users admin_users?                          @relation("form_states_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "form_states_updated_by_id_fk")
  form_states_client_links                           form_states_client_links[]
  form_states_created_by_user_links                  form_states_created_by_user_links[]
  form_states_updated_by_user_links                  form_states_updated_by_user_links[]
  usecases_form_state_links                          usecases_form_state_links[]

  // @@index([created_by_id], map: "form_states_created_by_id_fk")
  // @@index([updated_by_id], map: "form_states_updated_by_id_fk")
}

model form_states_client_links {
  id            Int          @id @default(autoincrement())
  form_state_id Int?
  client_id     Int?
  form_states   form_states? @relation(fields: [form_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "form_states_client_links_fk")
  clients       clients?     @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "form_states_client_links_inv_fk")

  // @@index([form_state_id], map: "form_states_client_links_fk")
  // @@index([client_id], map: "form_states_client_links_inv_fk")
  @@unique([form_state_id, client_id], map: "form_states_client_links_unique")
}

model form_states_created_by_user_links {
  id            Int          @id @default(autoincrement())
  form_state_id Int?
  user_id       Int?
  form_states   form_states? @relation(fields: [form_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "form_states_created_by_user_links_fk")
  up_users      up_users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "form_states_created_by_user_links_inv_fk")

  // @@index([form_state_id], map: "form_states_created_by_user_links_fk")
  // @@index([user_id], map: "form_states_created_by_user_links_inv_fk")
  @@unique([form_state_id, user_id], map: "form_states_created_by_user_links_unique")
}

model form_states_updated_by_user_links {
  id            Int          @id @default(autoincrement())
  form_state_id Int?
  user_id       Int?
  form_states   form_states? @relation(fields: [form_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "form_states_updated_by_user_links_fk")
  up_users      up_users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "form_states_updated_by_user_links_inv_fk")

  // @@index([form_state_id], map: "form_states_updated_by_user_links_fk")
  // @@index([user_id], map: "form_states_updated_by_user_links_inv_fk")
  @@unique([form_state_id, user_id], map: "form_states_updated_by_user_links_unique")
}

model i18n_locale {
  id                                                 Int          @id @default(autoincrement())
  name                                               String?      @db.VarChar(255)
  code                                               String?      @db.VarChar(255)
  created_at                                         DateTime?    @db.Timestamp(6)
  updated_at                                         DateTime?    @db.Timestamp(6)
  created_by_id                                      Int?
  updated_by_id                                      Int?
  admin_users_i18n_locale_created_by_idToadmin_users admin_users? @relation("i18n_locale_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "i18n_locale_created_by_id_fk")
  admin_users_i18n_locale_updated_by_idToadmin_users admin_users? @relation("i18n_locale_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "i18n_locale_updated_by_id_fk")

  // @@index([created_by_id], map: "i18n_locale_created_by_id_fk")
  // @@index([updated_by_id], map: "i18n_locale_updated_by_id_fk")
}

model job_histories {
  id                                                   Int                                   @id @default(autoincrement())
  job_id                                               String?                               @db.VarChar(255)
  pipeline_task                                        String?                               @db.VarChar(255)
  job_status                                           String?                               @db.VarChar(255)
  progress                                             Int?
  total_steps                                          Int?
  asset                                                String?                               @db.VarChar(255)
  is_deleted                                           Boolean?
  created_at                                           DateTime?                             @db.Timestamp(6)
  updated_at                                           DateTime?                             @db.Timestamp(6)
  created_by_id                                        Int?
  updated_by_id                                        Int?
  admin_users_job_histories_created_by_idToadmin_users admin_users?                          @relation("job_histories_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "job_histories_created_by_id_fk")
  admin_users_job_histories_updated_by_idToadmin_users admin_users?                          @relation("job_histories_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "job_histories_updated_by_id_fk")
  job_histories_client_links                           job_histories_client_links[]
  job_histories_created_by_user_links                  job_histories_created_by_user_links[]
  job_histories_pipeline_links                         job_histories_pipeline_links[]
  job_histories_usecase_links                          job_histories_usecase_links[]

  // @@index([created_by_id], map: "job_histories_created_by_id_fk")
  // @@index([updated_by_id], map: "job_histories_updated_by_id_fk")
}

model job_histories_client_links {
  id             Int            @id @default(autoincrement())
  job_history_id Int?
  client_id      Int?
  job_histories  job_histories? @relation(fields: [job_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "job_histories_client_links_fk")
  clients        clients?       @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "job_histories_client_links_inv_fk")

  // @@index([job_history_id], map: "job_histories_client_links_fk")
  // @@index([client_id], map: "job_histories_client_links_inv_fk")
  @@unique([job_history_id, client_id], map: "job_histories_client_links_unique")
}

model job_histories_created_by_user_links {
  id             Int            @id @default(autoincrement())
  job_history_id Int?
  user_id        Int?
  job_histories  job_histories? @relation(fields: [job_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "job_histories_created_by_user_links_fk")
  up_users       up_users?      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "job_histories_created_by_user_links_inv_fk")

  // @@index([job_history_id], map: "job_histories_created_by_user_links_fk")
  // @@index([user_id], map: "job_histories_created_by_user_links_inv_fk")
  @@unique([job_history_id, user_id], map: "job_histories_created_by_user_links_unique")
}

model job_histories_pipeline_links {
  id             Int            @id @default(autoincrement())
  job_history_id Int?
  pipeline_id    Int?
  job_histories  job_histories? @relation(fields: [job_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "job_histories_pipeline_links_fk")
  pipelines      pipelines?     @relation(fields: [pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "job_histories_pipeline_links_inv_fk")

  // @@index([job_history_id], map: "job_histories_pipeline_links_fk")
  // @@index([pipeline_id], map: "job_histories_pipeline_links_inv_fk")
  @@unique([job_history_id, pipeline_id], map: "job_histories_pipeline_links_unique")
}

model job_histories_usecase_links {
  id             Int            @id @default(autoincrement())
  job_history_id Int?
  usecase_id     Int?
  job_histories  job_histories? @relation(fields: [job_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "job_histories_usecase_links_fk")
  usecases       usecases?      @relation(fields: [usecase_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "job_histories_usecase_links_inv_fk")

  // @@index([job_history_id], map: "job_histories_usecase_links_fk")
  // @@index([usecase_id], map: "job_histories_usecase_links_inv_fk")
  @@unique([job_history_id, usecase_id], map: "job_histories_usecase_links_unique")
}

model licenses {
  id                                              Int                        @id @default(autoincrement())
  uid                                             String?                    @unique(map: "licenses_uid_unique") @db.VarChar(255)
  pipeline_limit                                  Int?
  usecase_limit                                   Int?
  product                                         String?                    @db.VarChar(255)
  created_at                                      DateTime?                  @db.Timestamp(6)
  updated_at                                      DateTime?                  @db.Timestamp(6)
  created_by_id                                   Int?
  updated_by_id                                   Int?
  trial                                           Boolean?
  expiration                                      DateTime?                  @db.Date
  admin_users_licenses_created_by_idToadmin_users admin_users?               @relation("licenses_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "licenses_created_by_id_fk")
  admin_users_licenses_updated_by_idToadmin_users admin_users?               @relation("licenses_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "licenses_updated_by_id_fk")
  licenses_client_links                           licenses_client_links[]
  licenses_components                             licenses_components[]
  licenses_pipelines_links                        licenses_pipelines_links[]
  licenses_usecases_links                         licenses_usecases_links[]

  // @@index([created_by_id], map: "licenses_created_by_id_fk")
  // @@index([updated_by_id], map: "licenses_updated_by_id_fk")
}

model licenses_client_links {
  id         Int       @id @default(autoincrement())
  license_id Int?
  client_id  Int?
  licenses   licenses? @relation(fields: [license_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "licenses_client_links_fk")
  clients    clients?  @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "licenses_client_links_inv_fk")

  // @@index([license_id], map: "licenses_client_links_fk")
  // @@index([client_id], map: "licenses_client_links_inv_fk")
  @@unique([license_id, client_id], map: "licenses_client_links_unique")
}

model licenses_components {
  id             Int       @id @default(autoincrement())
  entity_id      Int?
  component_id   Int?
  component_type String?   @db.VarChar(255)
  field          String?   @db.VarChar(255)
  order          Float?
  licenses       licenses? @relation(fields: [entity_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "licenses_entity_fk")

  // @@index([component_type], map: "licenses_component_type_index")
  // @@index([entity_id], map: "licenses_entity_fk")
  // @@index([field], map: "licenses_field_index")
  @@unique([entity_id, component_id, field, component_type], map: "licenses_unique")
}

model licenses_pipelines_links {
  id             Int        @id @default(autoincrement())
  license_id     Int?
  pipeline_id    Int?
  pipeline_order Float?
  licenses       licenses?  @relation(fields: [license_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "licenses_pipelines_links_fk")
  pipelines      pipelines? @relation(fields: [pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "licenses_pipelines_links_inv_fk")

  // @@index([license_id], map: "licenses_pipelines_links_fk")
  // @@index([pipeline_id], map: "licenses_pipelines_links_inv_fk")
  // @@index([pipeline_order], map: "licenses_pipelines_links_order_fk")
  @@unique([license_id, pipeline_id], map: "licenses_pipelines_links_unique")
}

model licenses_usecases_links {
  id            Int       @id @default(autoincrement())
  license_id    Int?
  usecase_id    Int?
  usecase_order Float?
  licenses      licenses? @relation(fields: [license_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "licenses_usecases_links_fk")
  usecases      usecases? @relation(fields: [usecase_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "licenses_usecases_links_inv_fk")

  // @@index([license_id], map: "licenses_usecases_links_fk")
  // @@index([usecase_id], map: "licenses_usecases_links_inv_fk")
  // @@index([usecase_order], map: "licenses_usecases_links_order_fk")
  @@unique([license_id, usecase_id], map: "licenses_usecases_links_unique")
}

model pipelines {
  id                                               Int                                @id @default(autoincrement())
  name                                             String?                            @db.VarChar(255)
  config                                           Json?
  metadata                                         Json?
  active                                           Boolean?
  created_at                                       DateTime?                          @db.Timestamp(6)
  updated_at                                       DateTime?                          @db.Timestamp(6)
  created_by_id                                    Int?
  updated_by_id                                    Int?
  archived                                         Boolean?
  backfill_dags_pipeline_links                     backfill_dags_pipeline_links[]
  job_histories_pipeline_links                     job_histories_pipeline_links[]
  licenses_pipelines_links                         licenses_pipelines_links[]
  admin_users_pipelines_created_by_idToadmin_users admin_users?                       @relation("pipelines_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "pipelines_created_by_id_fk")
  admin_users_pipelines_updated_by_idToadmin_users admin_users?                       @relation("pipelines_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "pipelines_updated_by_id_fk")
  pipelines_client_links                           pipelines_client_links[]
  pipelines_components                             pipelines_components[]
  pipelines_created_by_user_links                  pipelines_created_by_user_links[]
  pipelines_history_original_links                 pipelines_history_original_links[]
  pipelines_updated_by_user_links                  pipelines_updated_by_user_links[]
  promotions_pipelines_links                       promotions_pipelines_links[]
  usecases_history_pipeline_links                  usecases_history_pipeline_links[]
  usecases_pipeline_links                          usecases_pipeline_links[]

  // @@index([created_by_id], map: "pipelines_created_by_id_fk")
  // @@index([updated_by_id], map: "pipelines_updated_by_id_fk")
}

model pipelines_client_links {
  id          Int        @id @default(autoincrement())
  pipeline_id Int?
  client_id   Int?
  pipelines   pipelines? @relation(fields: [pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pipelines_client_links_fk")
  clients     clients?   @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pipelines_client_links_inv_fk")

  // @@index([pipeline_id], map: "pipelines_client_links_fk")
  // @@index([client_id], map: "pipelines_client_links_inv_fk")
  @@unique([pipeline_id, client_id], map: "pipelines_client_links_unique")
}

model pipelines_components {
  id             Int        @id @default(autoincrement())
  entity_id      Int?
  component_id   Int?
  component_type String?    @db.VarChar(255)
  field          String?    @db.VarChar(255)
  order          Float?
  pipelines      pipelines? @relation(fields: [entity_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pipelines_entity_fk")

  // @@index([component_type], map: "pipelines_component_type_index")
  // @@index([entity_id], map: "pipelines_entity_fk")
  // @@index([field], map: "pipelines_field_index")
  @@unique([entity_id, component_id, field, component_type], map: "pipelines_unique")
}

model pipelines_created_by_user_links {
  id          Int        @id @default(autoincrement())
  pipeline_id Int?
  user_id     Int?
  pipelines   pipelines? @relation(fields: [pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pipelines_created_by_user_links_fk")
  up_users    up_users?  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pipelines_created_by_user_links_inv_fk")

  // @@index([pipeline_id], map: "pipelines_created_by_user_links_fk")
  // @@index([user_id], map: "pipelines_created_by_user_links_inv_fk")
  @@unique([pipeline_id, user_id], map: "pipelines_created_by_user_links_unique")
}

model pipelines_history {
  id                                                       Int                                       @id @default(autoincrement())
  name                                                     String?                                   @db.VarChar(255)
  config                                                   Json?
  metadata                                                 Json?
  created_at                                               DateTime?                                 @db.Timestamp(6)
  updated_at                                               DateTime?                                 @db.Timestamp(6)
  created_by_id                                            Int?
  updated_by_id                                            Int?
  active                                                   Boolean?
  archived                                                 Boolean?
  admin_users_pipelines_history_created_by_idToadmin_users admin_users?                              @relation("pipelines_history_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "pipelines_history_created_by_id_fk")
  admin_users_pipelines_history_updated_by_idToadmin_users admin_users?                              @relation("pipelines_history_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "pipelines_history_updated_by_id_fk")
  pipelines_history_client_links                           pipelines_history_client_links[]
  pipelines_history_created_by_user_links                  pipelines_history_created_by_user_links[]
  pipelines_history_original_links                         pipelines_history_original_links[]
  pipelines_history_updated_by_user_links                  pipelines_history_updated_by_user_links[]

  // @@index([created_by_id], map: "pipelines_history_created_by_id_fk")
  // @@index([updated_by_id], map: "pipelines_history_updated_by_id_fk")
}

model pipelines_history_client_links {
  id                  Int                @id @default(autoincrement())
  pipeline_history_id Int?
  client_id           Int?
  pipelines_history   pipelines_history? @relation(fields: [pipeline_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pipelines_history_client_links_fk")
  clients             clients?           @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pipelines_history_client_links_inv_fk")

  // @@index([pipeline_history_id], map: "pipelines_history_client_links_fk")
  // @@index([client_id], map: "pipelines_history_client_links_inv_fk")
  @@unique([pipeline_history_id, client_id], map: "pipelines_history_client_links_unique")
}

model pipelines_history_created_by_user_links {
  id                  Int                @id @default(autoincrement())
  pipeline_history_id Int?
  user_id             Int?
  pipelines_history   pipelines_history? @relation(fields: [pipeline_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pipelines_history_created_by_user_links_fk")
  up_users            up_users?          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pipelines_history_created_by_user_links_inv_fk")

  // @@index([pipeline_history_id], map: "pipelines_history_created_by_user_links_fk")
  // @@index([user_id], map: "pipelines_history_created_by_user_links_inv_fk")
  @@unique([pipeline_history_id, user_id], map: "pipelines_history_created_by_user_links_unique")
}

model pipelines_history_original_links {
  id                  Int                @id @default(autoincrement())
  pipeline_history_id Int?
  pipeline_id         Int?
  pipelines_history   pipelines_history? @relation(fields: [pipeline_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pipelines_history_original_links_fk")
  pipelines           pipelines?         @relation(fields: [pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pipelines_history_original_links_inv_fk")

  // @@index([pipeline_history_id], map: "pipelines_history_original_links_fk")
  // @@index([pipeline_id], map: "pipelines_history_original_links_inv_fk")
  @@unique([pipeline_history_id, pipeline_id], map: "pipelines_history_original_links_unique")
}

model pipelines_history_updated_by_user_links {
  id                  Int                @id @default(autoincrement())
  pipeline_history_id Int?
  user_id             Int?
  pipelines_history   pipelines_history? @relation(fields: [pipeline_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pipelines_history_updated_by_user_links_fk")
  up_users            up_users?          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pipelines_history_updated_by_user_links_inv_fk")

  // @@index([pipeline_history_id], map: "pipelines_history_updated_by_user_links_fk")
  // @@index([user_id], map: "pipelines_history_updated_by_user_links_inv_fk")
  @@unique([pipeline_history_id, user_id], map: "pipelines_history_updated_by_user_links_unique")
}

model pipelines_updated_by_user_links {
  id          Int        @id @default(autoincrement())
  pipeline_id Int?
  user_id     Int?
  pipelines   pipelines? @relation(fields: [pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pipelines_updated_by_user_links_fk")
  up_users    up_users?  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pipelines_updated_by_user_links_inv_fk")

  // @@index([pipeline_id], map: "pipelines_updated_by_user_links_fk")
  // @@index([user_id], map: "pipelines_updated_by_user_links_inv_fk")
  @@unique([pipeline_id, user_id], map: "pipelines_updated_by_user_links_unique")
}

model portal_tooltips {
  id                                                                                                             Int                                   @id @default(autoincrement())
  created_at                                                                                                     DateTime?                             @db.Timestamp(6)
  updated_at                                                                                                     DateTime?                             @db.Timestamp(6)
  created_by_id                                                                                                  Int?
  updated_by_id                                                                                                  Int?
  locale                                                                                                         String?                               @db.VarChar(255)
  admin_users_portal_tooltips_created_by_idToadmin_users                                                         admin_users?                          @relation("portal_tooltips_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "portal_tooltips_created_by_id_fk")
  admin_users_portal_tooltips_updated_by_idToadmin_users                                                         admin_users?                          @relation("portal_tooltips_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "portal_tooltips_updated_by_id_fk")
  portal_tooltips_components                                                                                     portal_tooltips_components[]
  portal_tooltips_localizations_links_portal_tooltips_localizations_links_portal_tooltip_idToportal_tooltips     portal_tooltips_localizations_links[] @relation("portal_tooltips_localizations_links_portal_tooltip_idToportal_tooltips")
  portal_tooltips_localizations_links_portal_tooltips_localizations_links_inv_portal_tooltip_idToportal_tooltips portal_tooltips_localizations_links[] @relation("portal_tooltips_localizations_links_inv_portal_tooltip_idToportal_tooltips")

  // @@index([created_by_id], map: "portal_tooltips_created_by_id_fk")
  // @@index([updated_by_id], map: "portal_tooltips_updated_by_id_fk")
}

model portal_tooltips_components {
  id              Int              @id @default(autoincrement())
  entity_id       Int?
  component_id    Int?
  component_type  String?          @db.VarChar(255)
  field           String?          @db.VarChar(255)
  order           Float?
  portal_tooltips portal_tooltips? @relation(fields: [entity_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "portal_tooltips_entity_fk")

  // @@index([component_type], map: "portal_tooltips_component_type_index")
  // @@index([entity_id], map: "portal_tooltips_entity_fk")
  // @@index([field], map: "portal_tooltips_field_index")
  @@unique([entity_id, component_id, field, component_type], map: "portal_tooltips_unique")
}

model portal_tooltips_localizations_links {
  id                                                                                         Int              @id @default(autoincrement())
  portal_tooltip_id                                                                          Int?
  inv_portal_tooltip_id                                                                      Int?
  portal_tooltip_order                                                                       Float?
  portal_tooltips_portal_tooltips_localizations_links_portal_tooltip_idToportal_tooltips     portal_tooltips? @relation("portal_tooltips_localizations_links_portal_tooltip_idToportal_tooltips", fields: [portal_tooltip_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "portal_tooltips_localizations_links_fk")
  portal_tooltips_portal_tooltips_localizations_links_inv_portal_tooltip_idToportal_tooltips portal_tooltips? @relation("portal_tooltips_localizations_links_inv_portal_tooltip_idToportal_tooltips", fields: [inv_portal_tooltip_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "portal_tooltips_localizations_links_inv_fk")

  // @@index([portal_tooltip_id], map: "portal_tooltips_localizations_links_fk")
  // @@index([inv_portal_tooltip_id], map: "portal_tooltips_localizations_links_inv_fk")
  // @@index([portal_tooltip_order], map: "portal_tooltips_localizations_links_order_fk")
  @@unique([portal_tooltip_id, inv_portal_tooltip_id], map: "portal_tooltips_localizations_links_unique")
}

model promotions {
  id                                                Int                              @id @default(autoincrement())
  user_comment                                      String?
  state                                             String?                          @db.VarChar(255)
  is_archived                                       Boolean?
  dag_id                                            String?                          @db.VarChar(255)
  review_message                                    String?
  usecases_config_version_map                       Json?
  pipelines_config_version_map                      Json?
  deployment_error                                  String?                          @db.VarChar(255)
  created_at                                        DateTime?                        @db.Timestamp(6)
  updated_at                                        DateTime?                        @db.Timestamp(6)
  created_by_id                                     Int?
  updated_by_id                                     Int?
  failed_test_info                                  Json?
  promotion_decision                                Json?
  admin_users_promotions_created_by_idToadmin_users admin_users?                     @relation("promotions_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "promotions_created_by_id_fk")
  admin_users_promotions_updated_by_idToadmin_users admin_users?                     @relation("promotions_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "promotions_updated_by_id_fk")
  promotions_client_links                           promotions_client_links[]
  promotions_pipelines_links                        promotions_pipelines_links[]
  promotions_promoter_user_links                    promotions_promoter_user_links[]
  promotions_reviewer_links                         promotions_reviewer_links[]
  promotions_usecases_links                         promotions_usecases_links[]

  // @@index([created_by_id], map: "promotions_created_by_id_fk")
  // @@index([updated_by_id], map: "promotions_updated_by_id_fk")
}

model promotions_client_links {
  id           Int         @id @default(autoincrement())
  promotion_id Int?
  client_id    Int?
  promotions   promotions? @relation(fields: [promotion_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "promotions_client_links_fk")
  clients      clients?    @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "promotions_client_links_inv_fk")

  // @@index([promotion_id], map: "promotions_client_links_fk")
  // @@index([client_id], map: "promotions_client_links_inv_fk")
  @@unique([promotion_id, client_id], map: "promotions_client_links_unique")
}

model promotions_pipelines_links {
  id             Int         @id @default(autoincrement())
  promotion_id   Int?
  pipeline_id    Int?
  pipeline_order Float?
  promotions     promotions? @relation(fields: [promotion_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "promotions_pipelines_links_fk")
  pipelines      pipelines?  @relation(fields: [pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "promotions_pipelines_links_inv_fk")

  // @@index([promotion_id], map: "promotions_pipelines_links_fk")
  // @@index([pipeline_id], map: "promotions_pipelines_links_inv_fk")
  // @@index([pipeline_order], map: "promotions_pipelines_links_order_fk")
  @@unique([promotion_id, pipeline_id], map: "promotions_pipelines_links_unique")
}

model promotions_promoter_user_links {
  id           Int         @id @default(autoincrement())
  promotion_id Int?
  user_id      Int?
  promotions   promotions? @relation(fields: [promotion_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "promotions_promoter_user_links_fk")
  up_users     up_users?   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "promotions_promoter_user_links_inv_fk")

  // @@index([promotion_id], map: "promotions_promoter_user_links_fk")
  // @@index([user_id], map: "promotions_promoter_user_links_inv_fk")
  @@unique([promotion_id, user_id], map: "promotions_promoter_user_links_unique")
}

model promotions_reviewer_links {
  id           Int         @id @default(autoincrement())
  promotion_id Int?
  user_id      Int?
  promotions   promotions? @relation(fields: [promotion_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "promotions_reviewer_links_fk")
  up_users     up_users?   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "promotions_reviewer_links_inv_fk")

  // @@index([promotion_id], map: "promotions_reviewer_links_fk")
  // @@index([user_id], map: "promotions_reviewer_links_inv_fk")
  @@unique([promotion_id, user_id], map: "promotions_reviewer_links_unique")
}

model promotions_usecases_links {
  id            Int         @id @default(autoincrement())
  promotion_id  Int?
  usecase_id    Int?
  usecase_order Float?
  promotions    promotions? @relation(fields: [promotion_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "promotions_usecases_links_fk")
  usecases      usecases?   @relation(fields: [usecase_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "promotions_usecases_links_inv_fk")

  // @@index([promotion_id], map: "promotions_usecases_links_fk")
  // @@index([usecase_id], map: "promotions_usecases_links_inv_fk")
  // @@index([usecase_order], map: "promotions_usecases_links_order_fk")
  @@unique([promotion_id, usecase_id], map: "promotions_usecases_links_unique")
}

model role_privileges {
  id                                                     Int                             @id @default(autoincrement())
  enabled                                                Boolean?
  uid                                                    String?                         @db.VarChar(255)
  created_at                                             DateTime?                       @db.Timestamp(6)
  updated_at                                             DateTime?                       @db.Timestamp(6)
  created_by_id                                          Int?
  updated_by_id                                          Int?
  admin_users_role_privileges_created_by_idToadmin_users admin_users?                    @relation("role_privileges_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "role_privileges_created_by_id_fk")
  admin_users_role_privileges_updated_by_idToadmin_users admin_users?                    @relation("role_privileges_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "role_privileges_updated_by_id_fk")
  role_privileges_feature_links                          role_privileges_feature_links[]
  role_privileges_role_links                             role_privileges_role_links[]

  // @@index([created_by_id], map: "role_privileges_created_by_id_fk")
  // @@index([updated_by_id], map: "role_privileges_updated_by_id_fk")
}

model role_privileges_feature_links {
  id                Int              @id @default(autoincrement())
  role_privilege_id Int?
  feature_id        Int?
  role_privileges   role_privileges? @relation(fields: [role_privilege_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "role_privileges_feature_links_fk")
  features          features?        @relation(fields: [feature_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "role_privileges_feature_links_inv_fk")

  // @@index([role_privilege_id], map: "role_privileges_feature_links_fk")
  // @@index([feature_id], map: "role_privileges_feature_links_inv_fk")
  @@unique([role_privilege_id, feature_id], map: "role_privileges_feature_links_unique")
}

model role_privileges_role_links {
  id                Int              @id @default(autoincrement())
  role_privilege_id Int?
  role_id           Int?
  role_privileges   role_privileges? @relation(fields: [role_privilege_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "role_privileges_role_links_fk")
  up_roles          up_roles?        @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "role_privileges_role_links_inv_fk")

  // @@index([role_privilege_id], map: "role_privileges_role_links_fk")
  // @@index([role_id], map: "role_privileges_role_links_inv_fk")
  @@unique([role_privilege_id, role_id], map: "role_privileges_role_links_unique")
}

model service_accounts {
  id                                                      Int                             @id @default(autoincrement())
  email                                                   String?                         @db.VarChar(255)
  key                                                     String?
  created_at                                              DateTime?                       @db.Timestamp(6)
  updated_at                                              DateTime?                       @db.Timestamp(6)
  created_by_id                                           Int?
  updated_by_id                                           Int?
  admin_users_service_accounts_created_by_idToadmin_users admin_users?                    @relation("service_accounts_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "service_accounts_created_by_id_fk")
  admin_users_service_accounts_updated_by_idToadmin_users admin_users?                    @relation("service_accounts_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "service_accounts_updated_by_id_fk")
  service_accounts_client_links                           service_accounts_client_links[]

  // @@index([created_by_id], map: "service_accounts_created_by_id_fk")
  // @@index([updated_by_id], map: "service_accounts_updated_by_id_fk")
}

model service_accounts_client_links {
  id                 Int               @id @default(autoincrement())
  service_account_id Int?
  client_id          Int?
  service_accounts   service_accounts? @relation(fields: [service_account_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "service_accounts_client_links_fk")
  clients            clients?          @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "service_accounts_client_links_inv_fk")

  // @@index([service_account_id], map: "service_accounts_client_links_fk")
  // @@index([client_id], map: "service_accounts_client_links_inv_fk")
  @@unique([service_account_id, client_id], map: "service_accounts_client_links_unique")
}

model strapi_api_token_permissions {
  id                                                                  Int                                        @id @default(autoincrement())
  action                                                              String?                                    @db.VarChar(255)
  created_at                                                          DateTime?                                  @db.Timestamp(6)
  updated_at                                                          DateTime?                                  @db.Timestamp(6)
  created_by_id                                                       Int?
  updated_by_id                                                       Int?
  admin_users_strapi_api_token_permissions_created_by_idToadmin_users admin_users?                               @relation("strapi_api_token_permissions_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "strapi_api_token_permissions_created_by_id_fk")
  admin_users_strapi_api_token_permissions_updated_by_idToadmin_users admin_users?                               @relation("strapi_api_token_permissions_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "strapi_api_token_permissions_updated_by_id_fk")
  strapi_api_token_permissions_token_links                            strapi_api_token_permissions_token_links[]

  // @@index([created_by_id], map: "strapi_api_token_permissions_created_by_id_fk")
  // @@index([updated_by_id], map: "strapi_api_token_permissions_updated_by_id_fk")
}

model strapi_api_token_permissions_token_links {
  id                           Int                           @id @default(autoincrement())
  api_token_permission_id      Int?
  api_token_id                 Int?
  api_token_permission_order   Float?
  strapi_api_token_permissions strapi_api_token_permissions? @relation(fields: [api_token_permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "strapi_api_token_permissions_token_links_fk")
  strapi_api_tokens            strapi_api_tokens?            @relation(fields: [api_token_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "strapi_api_token_permissions_token_links_inv_fk")

  // @@index([api_token_permission_id], map: "strapi_api_token_permissions_token_links_fk")
  // @@index([api_token_id], map: "strapi_api_token_permissions_token_links_inv_fk")
  // @@index([api_token_permission_order], map: "strapi_api_token_permissions_token_links_order_inv_fk")
  @@unique([api_token_permission_id, api_token_id], map: "strapi_api_token_permissions_token_links_unique")
}

model strapi_api_tokens {
  id                                                       Int                                        @id @default(autoincrement())
  name                                                     String?                                    @db.VarChar(255)
  description                                              String?                                    @db.VarChar(255)
  type                                                     String?                                    @db.VarChar(255)
  access_key                                               String?                                    @db.VarChar(255)
  last_used_at                                             DateTime?                                  @db.Timestamp(6)
  expires_at                                               DateTime?                                  @db.Timestamp(6)
  lifespan                                                 BigInt?
  created_at                                               DateTime?                                  @db.Timestamp(6)
  updated_at                                               DateTime?                                  @db.Timestamp(6)
  created_by_id                                            Int?
  updated_by_id                                            Int?
  strapi_api_token_permissions_token_links                 strapi_api_token_permissions_token_links[]
  admin_users_strapi_api_tokens_created_by_idToadmin_users admin_users?                               @relation("strapi_api_tokens_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "strapi_api_tokens_created_by_id_fk")
  admin_users_strapi_api_tokens_updated_by_idToadmin_users admin_users?                               @relation("strapi_api_tokens_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "strapi_api_tokens_updated_by_id_fk")

  // @@index([created_by_id], map: "strapi_api_tokens_created_by_id_fk")
  // @@index([updated_by_id], map: "strapi_api_tokens_updated_by_id_fk")
}

model strapi_core_store_settings {
  id          Int     @id @default(autoincrement())
  key         String? @db.VarChar(255)
  value       String?
  type        String? @db.VarChar(255)
  environment String? @db.VarChar(255)
  tag         String? @db.VarChar(255)
}

model strapi_database_schema {
  id     Int       @id @default(autoincrement())
  schema Json?     @db.Json
  time   DateTime? @db.Timestamp(6)
  hash   String?   @db.VarChar(255)
}

model strapi_migrations {
  id   Int       @id @default(autoincrement())
  name String?   @db.VarChar(255)
  time DateTime? @db.Timestamp(6)
}

model strapi_release_actions {
  id                                                            Int                                    @id @default(autoincrement())
  type                                                          String?                                @db.VarChar(255)
  target_id                                                     Int?
  target_type                                                   String?                                @db.VarChar(255)
  content_type                                                  String?                                @db.VarChar(255)
  created_at                                                    DateTime?                              @db.Timestamp(6)
  updated_at                                                    DateTime?                              @db.Timestamp(6)
  created_by_id                                                 Int?
  updated_by_id                                                 Int?
  locale                                                        String?                                @db.VarChar(255)
  is_entry_valid                                                Boolean?
  admin_users_strapi_release_actions_created_by_idToadmin_users admin_users?                           @relation("strapi_release_actions_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "strapi_release_actions_created_by_id_fk")
  admin_users_strapi_release_actions_updated_by_idToadmin_users admin_users?                           @relation("strapi_release_actions_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "strapi_release_actions_updated_by_id_fk")
  strapi_release_actions_release_links                          strapi_release_actions_release_links[]

  // @@index([created_by_id], map: "strapi_release_actions_created_by_id_fk")
  // @@index([updated_by_id], map: "strapi_release_actions_updated_by_id_fk")
}

model strapi_release_actions_release_links {
  id                     Int                     @id @default(autoincrement())
  release_action_id      Int?
  release_id             Int?
  release_action_order   Float?
  strapi_release_actions strapi_release_actions? @relation(fields: [release_action_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "strapi_release_actions_release_links_fk")
  strapi_releases        strapi_releases?        @relation(fields: [release_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "strapi_release_actions_release_links_inv_fk")

  // @@index([release_action_id], map: "strapi_release_actions_release_links_fk")
  // @@index([release_id], map: "strapi_release_actions_release_links_inv_fk")
  // @@index([release_action_order], map: "strapi_release_actions_release_links_order_inv_fk")
  @@unique([release_action_id, release_id], map: "strapi_release_actions_release_links_unique")
}

model strapi_releases {
  id                                                     Int                                    @id @default(autoincrement())
  name                                                   String?                                @db.VarChar(255)
  released_at                                            DateTime?                              @db.Timestamp(6)
  created_at                                             DateTime?                              @db.Timestamp(6)
  updated_at                                             DateTime?                              @db.Timestamp(6)
  created_by_id                                          Int?
  updated_by_id                                          Int?
  scheduled_at                                           DateTime?                              @db.Timestamp(6)
  timezone                                               String?                                @db.VarChar(255)
  status                                                 String?                                @db.VarChar(255)
  strapi_release_actions_release_links                   strapi_release_actions_release_links[]
  admin_users_strapi_releases_created_by_idToadmin_users admin_users?                           @relation("strapi_releases_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "strapi_releases_created_by_id_fk")
  admin_users_strapi_releases_updated_by_idToadmin_users admin_users?                           @relation("strapi_releases_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "strapi_releases_updated_by_id_fk")

  // @@index([created_by_id], map: "strapi_releases_created_by_id_fk")
  // @@index([updated_by_id], map: "strapi_releases_updated_by_id_fk")
}

model strapi_transfer_token_permissions {
  id                                                                       Int                                             @id @default(autoincrement())
  action                                                                   String?                                         @db.VarChar(255)
  created_at                                                               DateTime?                                       @db.Timestamp(6)
  updated_at                                                               DateTime?                                       @db.Timestamp(6)
  created_by_id                                                            Int?
  updated_by_id                                                            Int?
  admin_users_strapi_transfer_token_permissions_created_by_idToadmin_users admin_users?                                    @relation("strapi_transfer_token_permissions_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "strapi_transfer_token_permissions_created_by_id_fk")
  admin_users_strapi_transfer_token_permissions_updated_by_idToadmin_users admin_users?                                    @relation("strapi_transfer_token_permissions_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "strapi_transfer_token_permissions_updated_by_id_fk")
  strapi_transfer_token_permissions_token_links                            strapi_transfer_token_permissions_token_links[]

  // @@index([created_by_id], map: "strapi_transfer_token_permissions_created_by_id_fk")
  // @@index([updated_by_id], map: "strapi_transfer_token_permissions_updated_by_id_fk")
}

model strapi_transfer_token_permissions_token_links {
  id                                Int                                @id @default(autoincrement())
  transfer_token_permission_id      Int?
  transfer_token_id                 Int?
  transfer_token_permission_order   Float?
  strapi_transfer_token_permissions strapi_transfer_token_permissions? @relation(fields: [transfer_token_permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "strapi_transfer_token_permissions_token_links_fk")
  strapi_transfer_tokens            strapi_transfer_tokens?            @relation(fields: [transfer_token_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "strapi_transfer_token_permissions_token_links_inv_fk")

  // @@index([transfer_token_permission_id], map: "strapi_transfer_token_permissions_token_links_fk")
  // @@index([transfer_token_id], map: "strapi_transfer_token_permissions_token_links_inv_fk")
  // @@index([transfer_token_permission_order], map: "strapi_transfer_token_permissions_token_links_order_inv_fk")
  @@unique([transfer_token_permission_id, transfer_token_id], map: "strapi_transfer_token_permissions_token_links_unique")
}

model strapi_transfer_tokens {
  id                                                            Int                                             @id @default(autoincrement())
  name                                                          String?                                         @db.VarChar(255)
  description                                                   String?                                         @db.VarChar(255)
  access_key                                                    String?                                         @db.VarChar(255)
  last_used_at                                                  DateTime?                                       @db.Timestamp(6)
  expires_at                                                    DateTime?                                       @db.Timestamp(6)
  lifespan                                                      BigInt?
  created_at                                                    DateTime?                                       @db.Timestamp(6)
  updated_at                                                    DateTime?                                       @db.Timestamp(6)
  created_by_id                                                 Int?
  updated_by_id                                                 Int?
  strapi_transfer_token_permissions_token_links                 strapi_transfer_token_permissions_token_links[]
  admin_users_strapi_transfer_tokens_created_by_idToadmin_users admin_users?                                    @relation("strapi_transfer_tokens_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "strapi_transfer_tokens_created_by_id_fk")
  admin_users_strapi_transfer_tokens_updated_by_idToadmin_users admin_users?                                    @relation("strapi_transfer_tokens_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "strapi_transfer_tokens_updated_by_id_fk")

  // @@index([created_by_id], map: "strapi_transfer_tokens_created_by_id_fk")
  // @@index([updated_by_id], map: "strapi_transfer_tokens_updated_by_id_fk")
}

model strapi_webhooks {
  id      Int      @id @default(autoincrement())
  name    String?  @db.VarChar(255)
  url     String?
  headers Json?
  events  Json?
  enabled Boolean?
}

model up_permissions {
  id                                                    Int                         @id @default(autoincrement())
  action                                                String?                     @db.VarChar(255)
  created_at                                            DateTime?                   @db.Timestamp(6)
  updated_at                                            DateTime?                   @db.Timestamp(6)
  created_by_id                                         Int?
  updated_by_id                                         Int?
  admin_users_up_permissions_created_by_idToadmin_users admin_users?                @relation("up_permissions_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "up_permissions_created_by_id_fk")
  admin_users_up_permissions_updated_by_idToadmin_users admin_users?                @relation("up_permissions_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "up_permissions_updated_by_id_fk")
  up_permissions_role_links                             up_permissions_role_links[]

  // @@index([created_by_id], map: "up_permissions_created_by_id_fk")
  // @@index([updated_by_id], map: "up_permissions_updated_by_id_fk")
}

model up_permissions_role_links {
  id               Int             @id @default(autoincrement())
  permission_id    Int?
  role_id          Int?
  permission_order Float?
  up_permissions   up_permissions? @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "up_permissions_role_links_fk")
  up_roles         up_roles?       @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "up_permissions_role_links_inv_fk")

  // @@index([permission_id], map: "up_permissions_role_links_fk")
  // @@index([role_id], map: "up_permissions_role_links_inv_fk")
  // @@index([permission_order], map: "up_permissions_role_links_order_inv_fk")
  @@unique([permission_id, role_id], map: "up_permissions_role_links_unique")
}

model up_roles {
  id                                              Int                                 @id @default(autoincrement())
  name                                            String?                             @db.VarChar(255)
  description                                     String?                             @db.VarChar(255)
  type                                            String?                             @db.VarChar(255)
  created_at                                      DateTime?                           @db.Timestamp(6)
  updated_at                                      DateTime?                           @db.Timestamp(6)
  created_by_id                                   Int?
  updated_by_id                                   Int?
  client_role_privileges_role_links               client_role_privileges_role_links[]
  role_privileges_role_links                      role_privileges_role_links[]
  up_permissions_role_links                       up_permissions_role_links[]
  admin_users_up_roles_created_by_idToadmin_users admin_users?                        @relation("up_roles_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "up_roles_created_by_id_fk")
  admin_users_up_roles_updated_by_idToadmin_users admin_users?                        @relation("up_roles_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "up_roles_updated_by_id_fk")
  up_users_role_links                             up_users_role_links[]

  // @@index([created_by_id], map: "up_roles_created_by_id_fk")
  // @@index([updated_by_id], map: "up_roles_updated_by_id_fk")
}

model up_users {
  id                                                  Int                                                   @id @default(autoincrement())
  username                                            String?                                               @db.VarChar(255)
  email                                               String?                                               @db.VarChar(255)
  provider                                            String?                                               @db.VarChar(255)
  password                                            String?                                               @db.VarChar(255)
  reset_password_token                                String?                                               @db.VarChar(255)
  confirmation_token                                  String?                                               @db.VarChar(255)
  confirmed                                           Boolean?
  blocked                                             Boolean?
  picture                                             String?
  auth_id                                             String?                                               @db.VarChar(255)
  tos_accepted                                        Boolean?
  is_read_only                                        Boolean?
  created_at                                          DateTime?                                             @db.Timestamp(6)
  updated_at                                          DateTime?                                             @db.Timestamp(6)
  created_by_id                                       Int?
  updated_by_id                                       Int?
  is_offerfit_email_enabled                           Boolean?
  invite_confirmation_code                            String?                                               @unique(map: "up_users_invite_confirmation_code_unique") @db.VarChar(255)
  clients_created_by_user_links                       clients_created_by_user_links[]
  clients_history_created_by_user_links               clients_history_created_by_user_links[]
  clients_history_updated_by_user_links               clients_history_updated_by_user_links[]
  clients_updated_by_user_links                       clients_updated_by_user_links[]
  components_customer_users_user_links                components_customer_users_user_links[]
  components_help_help_tooltips_created_by_user_links components_help_help_tooltips_created_by_user_links[]
  components_help_help_tooltips_updated_by_user_links components_help_help_tooltips_updated_by_user_links[]
  form_state_histories_created_by_user_links          form_state_histories_created_by_user_links[]
  form_state_histories_updated_by_user_links          form_state_histories_updated_by_user_links[]
  form_states_created_by_user_links                   form_states_created_by_user_links[]
  form_states_updated_by_user_links                   form_states_updated_by_user_links[]
  job_histories_created_by_user_links                 job_histories_created_by_user_links[]
  pipelines_created_by_user_links                     pipelines_created_by_user_links[]
  pipelines_history_created_by_user_links             pipelines_history_created_by_user_links[]
  pipelines_history_updated_by_user_links             pipelines_history_updated_by_user_links[]
  pipelines_updated_by_user_links                     pipelines_updated_by_user_links[]
  promotions_promoter_user_links                      promotions_promoter_user_links[]
  promotions_reviewer_links                           promotions_reviewer_links[]
  admin_users_up_users_created_by_idToadmin_users     admin_users?                                          @relation("up_users_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "up_users_created_by_id_fk")
  admin_users_up_users_updated_by_idToadmin_users     admin_users?                                          @relation("up_users_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "up_users_updated_by_id_fk")
  up_users_clients_links                              up_users_clients_links[]
  up_users_role_links                                 up_users_role_links[]
  usecases_created_by_user_links                      usecases_created_by_user_links[]
  usecases_history_created_by_user_links              usecases_history_created_by_user_links[]
  usecases_history_updated_by_user_links              usecases_history_updated_by_user_links[]
  usecases_updated_by_user_links                      usecases_updated_by_user_links[]
  user_notifications_target_user_links                user_notifications_target_user_links[]
  user_privileges_user_links                          user_privileges_user_links[]

  // @@index([created_by_id], map: "up_users_created_by_id_fk")
  // @@index([updated_by_id], map: "up_users_updated_by_id_fk")
}

model up_users_clients_links {
  id           Int       @id @default(autoincrement())
  user_id      Int?
  client_id    Int?
  client_order Float?
  up_users     up_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "up_users_clients_links_fk")
  clients      clients?  @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "up_users_clients_links_inv_fk")

  // @@index([user_id], map: "up_users_clients_links_fk")
  // @@index([client_id], map: "up_users_clients_links_inv_fk")
  // @@index([client_order], map: "up_users_clients_links_order_fk")
  @@unique([user_id, client_id], map: "up_users_clients_links_unique")
}

model up_users_role_links {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  role_id    Int?
  user_order Float?
  up_users   up_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "up_users_role_links_fk")
  up_roles   up_roles? @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "up_users_role_links_inv_fk")

  // @@index([user_id], map: "up_users_role_links_fk")
  // @@index([role_id], map: "up_users_role_links_inv_fk")
  // @@index([user_order], map: "up_users_role_links_order_inv_fk")
  @@unique([user_id, role_id], map: "up_users_role_links_unique")
}

model upload_folders {
  id                                                                                    Int                           @id @default(autoincrement())
  name                                                                                  String?                       @db.VarChar(255)
  path_id                                                                               Int?                          @unique(map: "upload_folders_path_id_index")
  path                                                                                  String?                       @unique(map: "upload_folders_path_index") @db.VarChar(255)
  created_at                                                                            DateTime?                     @db.Timestamp(6)
  updated_at                                                                            DateTime?                     @db.Timestamp(6)
  created_by_id                                                                         Int?
  updated_by_id                                                                         Int?
  files_folder_links                                                                    files_folder_links[]
  admin_users_upload_folders_created_by_idToadmin_users                                 admin_users?                  @relation("upload_folders_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "upload_folders_created_by_id_fk")
  admin_users_upload_folders_updated_by_idToadmin_users                                 admin_users?                  @relation("upload_folders_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "upload_folders_updated_by_id_fk")
  upload_folders_parent_links_upload_folders_parent_links_folder_idToupload_folders     upload_folders_parent_links[] @relation("upload_folders_parent_links_folder_idToupload_folders")
  upload_folders_parent_links_upload_folders_parent_links_inv_folder_idToupload_folders upload_folders_parent_links[] @relation("upload_folders_parent_links_inv_folder_idToupload_folders")

  // @@index([created_by_id], map: "upload_folders_created_by_id_fk")
  // @@index([updated_by_id], map: "upload_folders_updated_by_id_fk")
}

model upload_folders_parent_links {
  id                                                                       Int             @id @default(autoincrement())
  folder_id                                                                Int?
  inv_folder_id                                                            Int?
  folder_order                                                             Float?
  upload_folders_upload_folders_parent_links_folder_idToupload_folders     upload_folders? @relation("upload_folders_parent_links_folder_idToupload_folders", fields: [folder_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "upload_folders_parent_links_fk")
  upload_folders_upload_folders_parent_links_inv_folder_idToupload_folders upload_folders? @relation("upload_folders_parent_links_inv_folder_idToupload_folders", fields: [inv_folder_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "upload_folders_parent_links_inv_fk")

  // @@index([folder_id], map: "upload_folders_parent_links_fk")
  // @@index([inv_folder_id], map: "upload_folders_parent_links_inv_fk")
  // @@index([folder_order], map: "upload_folders_parent_links_order_inv_fk")
  @@unique([folder_id, inv_folder_id], map: "upload_folders_parent_links_unique")
}

model usecases {
  id                                              Int                                  @id @default(autoincrement())
  status                                          String?                              @db.VarChar(255)
  name                                            String?                              @db.VarChar(255)
  config                                          Json?
  display_name                                    String?                              @db.VarChar(255)
  description                                     String?
  created_at                                      DateTime?                            @db.Timestamp(6)
  updated_at                                      DateTime?                            @db.Timestamp(6)
  created_by_id                                   Int?
  updated_by_id                                   Int?
  metadata                                        Json?
  active                                          Boolean?
  archived                                        Boolean?
  backfill_dags_usecase_links                     backfill_dags_usecase_links[]
  client_notifications_usecase_links              client_notifications_usecase_links[]
  job_histories_usecase_links                     job_histories_usecase_links[]
  licenses_usecases_links                         licenses_usecases_links[]
  promotions_usecases_links                       promotions_usecases_links[]
  admin_users_usecases_created_by_idToadmin_users admin_users?                         @relation("usecases_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "usecases_created_by_id_fk")
  admin_users_usecases_updated_by_idToadmin_users admin_users?                         @relation("usecases_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "usecases_updated_by_id_fk")
  usecases_client_links                           usecases_client_links[]
  usecases_components                             usecases_components[]
  usecases_created_by_user_links                  usecases_created_by_user_links[]
  usecases_form_state_links                       usecases_form_state_links[]
  usecases_history_original_links                 usecases_history_original_links[]
  usecases_pipeline_links                         usecases_pipeline_links[]
  usecases_updated_by_user_links                  usecases_updated_by_user_links[]

  // @@index([created_by_id], map: "usecases_created_by_id_fk")
  // @@index([updated_by_id], map: "usecases_updated_by_id_fk")
}

model usecases_client_links {
  id         Int       @id @default(autoincrement())
  usecase_id Int?
  client_id  Int?
  usecases   usecases? @relation(fields: [usecase_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_client_links_fk")
  clients    clients?  @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_client_links_inv_fk")

  // @@index([usecase_id], map: "usecases_client_links_fk")
  // @@index([client_id], map: "usecases_client_links_inv_fk")
  @@unique([usecase_id, client_id], map: "usecases_client_links_unique")
}

model usecases_components {
  id             Int       @id @default(autoincrement())
  entity_id      Int?
  component_id   Int?
  component_type String?   @db.VarChar(255)
  field          String?   @db.VarChar(255)
  order          Float?
  usecases       usecases? @relation(fields: [entity_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_entity_fk")

  // @@index([component_type], map: "usecases_component_type_index")
  // @@index([entity_id], map: "usecases_entity_fk")
  // @@index([field], map: "usecases_field_index")
  @@unique([entity_id, component_id, field, component_type], map: "usecases_unique")
}

model usecases_created_by_user_links {
  id         Int       @id @default(autoincrement())
  usecase_id Int?
  user_id    Int?
  usecases   usecases? @relation(fields: [usecase_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_created_by_user_links_fk")
  up_users   up_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_created_by_user_links_inv_fk")

  // @@index([usecase_id], map: "usecases_created_by_user_links_fk")
  // @@index([user_id], map: "usecases_created_by_user_links_inv_fk")
  @@unique([usecase_id, user_id], map: "usecases_created_by_user_links_unique")
}

model usecases_form_state_links {
  id            Int          @id @default(autoincrement())
  usecase_id    Int?
  form_state_id Int
  usecases      usecases?    @relation(fields: [usecase_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_form_state_links_fk")
  form_states   form_states? @relation(fields: [form_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_form_state_links_inv_fk")

  // @@index([usecase_id], map: "usecases_form_state_links_fk")
  // @@index([form_state_id], map: "usecases_form_state_links_inv_fk")
  @@unique([usecase_id, form_state_id], map: "usecases_form_state_links_unique")
}

model usecases_history {
  id                                                      Int                                      @id @default(autoincrement())
  name                                                    String?                                  @db.VarChar(255)
  status                                                  String?                                  @db.VarChar(255)
  config                                                  Json?
  display_name                                            String?                                  @db.VarChar(255)
  description                                             String?
  created_at                                              DateTime?                                @db.Timestamp(6)
  updated_at                                              DateTime?                                @db.Timestamp(6)
  created_by_id                                           Int?
  updated_by_id                                           Int?
  metadata                                                Json?
  active                                                  Boolean?
  archived                                                Boolean?
  admin_users_usecases_history_created_by_idToadmin_users admin_users?                             @relation("usecases_history_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "usecases_history_created_by_id_fk")
  admin_users_usecases_history_updated_by_idToadmin_users admin_users?                             @relation("usecases_history_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "usecases_history_updated_by_id_fk")
  usecases_history_client_links                           usecases_history_client_links[]
  usecases_history_created_by_user_links                  usecases_history_created_by_user_links[]
  usecases_history_original_links                         usecases_history_original_links[]
  usecases_history_pipeline_links                         usecases_history_pipeline_links[]
  usecases_history_updated_by_user_links                  usecases_history_updated_by_user_links[]

  // @@index([created_by_id], map: "usecases_history_created_by_id_fk")
  // @@index([updated_by_id], map: "usecases_history_updated_by_id_fk")
}

model usecases_history_client_links {
  id                 Int               @id @default(autoincrement())
  usecase_history_id Int?
  client_id          Int?
  usecases_history   usecases_history? @relation(fields: [usecase_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_history_client_links_fk")
  clients            clients?          @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_history_client_links_inv_fk")

  // @@index([usecase_history_id], map: "usecases_history_client_links_fk")
  // @@index([client_id], map: "usecases_history_client_links_inv_fk")
  @@unique([usecase_history_id, client_id], map: "usecases_history_client_links_unique")
}

model usecases_history_created_by_user_links {
  id                 Int               @id @default(autoincrement())
  usecase_history_id Int?
  user_id            Int?
  usecases_history   usecases_history? @relation(fields: [usecase_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_history_created_by_user_links_fk")
  up_users           up_users?         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_history_created_by_user_links_inv_fk")

  // @@index([usecase_history_id], map: "usecases_history_created_by_user_links_fk")
  // @@index([user_id], map: "usecases_history_created_by_user_links_inv_fk")
  @@unique([usecase_history_id, user_id], map: "usecases_history_created_by_user_links_unique")
}

model usecases_history_original_links {
  id                 Int               @id @default(autoincrement())
  usecase_history_id Int?
  usecase_id         Int?
  usecases_history   usecases_history? @relation(fields: [usecase_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_history_original_links_fk")
  usecases           usecases?         @relation(fields: [usecase_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_history_original_links_inv_fk")

  // @@index([usecase_history_id], map: "usecases_history_original_links_fk")
  // @@index([usecase_id], map: "usecases_history_original_links_inv_fk")
  @@unique([usecase_history_id, usecase_id], map: "usecases_history_original_links_unique")
}

model usecases_history_pipeline_links {
  id                 Int               @id @default(autoincrement())
  usecase_history_id Int?
  pipeline_id        Int?
  usecases_history   usecases_history? @relation(fields: [usecase_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_history_pipeline_links_fk")
  pipelines          pipelines?        @relation(fields: [pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_history_pipeline_links_inv_fk")

  // @@index([usecase_history_id], map: "usecases_history_pipeline_links_fk")
  // @@index([pipeline_id], map: "usecases_history_pipeline_links_inv_fk")
  @@unique([usecase_history_id, pipeline_id], map: "usecases_history_pipeline_links_unique")
}

model usecases_history_updated_by_user_links {
  id                 Int               @id @default(autoincrement())
  usecase_history_id Int?
  user_id            Int?
  usecases_history   usecases_history? @relation(fields: [usecase_history_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_history_updated_by_user_links_fk")
  up_users           up_users?         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_history_updated_by_user_links_inv_fk")

  // @@index([usecase_history_id], map: "usecases_history_updated_by_user_links_fk")
  // @@index([user_id], map: "usecases_history_updated_by_user_links_inv_fk")
  @@unique([usecase_history_id, user_id], map: "usecases_history_updated_by_user_links_unique")
}

model usecases_pipeline_links {
  id          Int        @id @default(autoincrement())
  usecase_id  Int?
  pipeline_id Int?
  usecases    usecases?  @relation(fields: [usecase_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_pipeline_links_fk")
  pipelines   pipelines? @relation(fields: [pipeline_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_pipeline_links_inv_fk")

  // @@index([usecase_id], map: "usecases_pipeline_links_fk")
  // @@index([pipeline_id], map: "usecases_pipeline_links_inv_fk")
  @@unique([usecase_id, pipeline_id], map: "usecases_pipeline_links_unique")
}

model usecases_updated_by_user_links {
  id         Int       @id @default(autoincrement())
  usecase_id Int?
  user_id    Int?
  usecases   usecases? @relation(fields: [usecase_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_updated_by_user_links_fk")
  up_users   up_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "usecases_updated_by_user_links_inv_fk")

  // @@index([usecase_id], map: "usecases_updated_by_user_links_fk")
  // @@index([user_id], map: "usecases_updated_by_user_links_inv_fk")
  @@unique([usecase_id, user_id], map: "usecases_updated_by_user_links_unique")
}

model user_notifications {
  id                                                        Int                                            @id @default(autoincrement())
  read                                                      Boolean?
  created_at                                                DateTime?                                      @db.Timestamp(6)
  updated_at                                                DateTime?                                      @db.Timestamp(6)
  created_by_id                                             Int?
  updated_by_id                                             Int?
  archived                                                  Boolean?
  admin_users_user_notifications_created_by_idToadmin_users admin_users?                                   @relation("user_notifications_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "user_notifications_created_by_id_fk")
  admin_users_user_notifications_updated_by_idToadmin_users admin_users?                                   @relation("user_notifications_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "user_notifications_updated_by_id_fk")
  user_notifications_client_notification_links              user_notifications_client_notification_links[]
  user_notifications_target_user_links                      user_notifications_target_user_links[]

  // @@index([created_by_id], map: "user_notifications_created_by_id_fk")
  // @@index([updated_by_id], map: "user_notifications_updated_by_id_fk")
}

model user_notifications_client_notification_links {
  id                     Int                   @id @default(autoincrement())
  user_notification_id   Int?
  client_notification_id Int?
  user_notifications     user_notifications?   @relation(fields: [user_notification_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_notifications_client_notification_links_fk")
  client_notifications   client_notifications? @relation(fields: [client_notification_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_notifications_client_notification_links_inv_fk")

  // @@index([user_notification_id], map: "user_notifications_client_notification_links_fk")
  // @@index([client_notification_id], map: "user_notifications_client_notification_links_inv_fk")
  @@unique([user_notification_id, client_notification_id], map: "user_notifications_client_notification_links_unique")
}

model user_notifications_target_user_links {
  id                   Int                 @id @default(autoincrement())
  user_notification_id Int?
  user_id              Int?
  user_notifications   user_notifications? @relation(fields: [user_notification_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_notifications_target_user_links_fk")
  up_users             up_users?           @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_notifications_target_user_links_inv_fk")

  // @@index([user_notification_id], map: "user_notifications_target_user_links_fk")
  // @@index([user_id], map: "user_notifications_target_user_links_inv_fk")
  @@unique([user_notification_id, user_id], map: "user_notifications_target_user_links_unique")
}

model user_privileges {
  id                                                     Int                              @id @default(autoincrement())
  enabled                                                Boolean?
  created_at                                             DateTime?                        @db.Timestamp(6)
  updated_at                                             DateTime?                        @db.Timestamp(6)
  created_by_id                                          Int?
  updated_by_id                                          Int?
  admin_users_user_privileges_created_by_idToadmin_users admin_users?                     @relation("user_privileges_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "user_privileges_created_by_id_fk")
  admin_users_user_privileges_updated_by_idToadmin_users admin_users?                     @relation("user_privileges_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "user_privileges_updated_by_id_fk")
  user_privileges_client_links                           user_privileges_client_links[]
  user_privileges_features_links                         user_privileges_features_links[]
  user_privileges_user_links                             user_privileges_user_links[]

  // @@index([created_by_id], map: "user_privileges_created_by_id_fk")
  // @@index([updated_by_id], map: "user_privileges_updated_by_id_fk")
}

model user_privileges_client_links {
  id                Int              @id @default(autoincrement())
  user_privilege_id Int?
  client_id         Int?
  user_privileges   user_privileges? @relation(fields: [user_privilege_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_privileges_client_links_fk")
  clients           clients?         @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_privileges_client_links_inv_fk")

  // @@index([user_privilege_id], map: "user_privileges_client_links_fk")
  // @@index([client_id], map: "user_privileges_client_links_inv_fk")
  @@unique([user_privilege_id, client_id], map: "user_privileges_client_links_unique")
}

model user_privileges_features_links {
  id                Int              @id @default(autoincrement())
  user_privilege_id Int?
  feature_id        Int?
  feature_order     Float?
  user_privileges   user_privileges? @relation(fields: [user_privilege_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_privileges_features_links_fk")
  features          features?        @relation(fields: [feature_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_privileges_features_links_inv_fk")

  // @@index([user_privilege_id], map: "user_privileges_features_links_fk")
  // @@index([feature_id], map: "user_privileges_features_links_inv_fk")
  // @@index([feature_order], map: "user_privileges_features_links_order_fk")
  @@unique([user_privilege_id, feature_id], map: "user_privileges_features_links_unique")
}

model user_privileges_user_links {
  id                Int              @id @default(autoincrement())
  user_privilege_id Int?
  user_id           Int?
  user_privileges   user_privileges? @relation(fields: [user_privilege_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_privileges_user_links_fk")
  up_users          up_users?        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_privileges_user_links_inv_fk")

  // @@index([user_privilege_id], map: "user_privileges_user_links_fk")
  // @@index([user_id], map: "user_privileges_user_links_inv_fk")
  @@unique([user_privilege_id, user_id], map: "user_privileges_user_links_unique")
}

model user_role_client_relations {
  id                                                                Int          @id @default(autoincrement())
  domains                                                           Json?
  emails                                                            Json?
  created_at                                                        DateTime?    @db.Timestamp(6)
  updated_at                                                        DateTime?    @db.Timestamp(6)
  created_by_id                                                     Int?
  updated_by_id                                                     Int?
  admin_users_user_role_client_relations_created_by_idToadmin_users admin_users? @relation("user_role_client_relations_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "user_role_client_relations_created_by_id_fk")
  admin_users_user_role_client_relations_updated_by_idToadmin_users admin_users? @relation("user_role_client_relations_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "user_role_client_relations_updated_by_id_fk")

  // @@index([created_by_id], map: "user_role_client_relations_created_by_id_fk")
  // @@index([updated_by_id], map: "user_role_client_relations_updated_by_id_fk")
}
